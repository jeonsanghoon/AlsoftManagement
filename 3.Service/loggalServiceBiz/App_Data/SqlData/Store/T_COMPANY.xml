<?xml version="1.0" encoding="utf-8" ?>
<DBAgentMultiTemplate  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://altsoft.kr/">

  <DBAgentTemplate TemplateID="GetCompanyList">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>업체조회</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2016-05-30</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
    SET NOCOUNT ON
    /********************************/
    /* 업체조회 조회 GetCompanyList */
    /********************************/
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
    DECLARE  @PAGE_COUNT INT = {0}
           , @PAGE      INT = {1};
    WITH T_TABLE AS
    (
    SELECT
          ROW_NUMBER() OVER(ORDER BY {2}) AS SEQ
        , A.COMPANY_CODE
        , A.COMPANY_ID
        , A.PASSWORD
        , A.COMPANY_NAME
        , A.COMPANY_TYPE
	      , B.NAME AS COMPANY_TYPE_NAME
        , A.COMPANY_TYPE2
	      , B2.NAME AS COMPANY_TYPE_NAME2
        , A.PHONE
        , A.MOBILE
        , A.EMAIL
        , A.ADDRESS1
        , A.ADDRESS2
        , A.ZIP_CODE
        , A.OWNER_NAME
        , A.OWNER_PHONE
        , A.OWNER_MOBILE
        , A.OWNER_EMAIL
        , A.STORE_SYNC
        , A.STATUS
	      , C.NAME AS STATUS_NAME
        , A.CULTURE_NAME
        , A.THEME_NAME
        , A.REMARK
        , A.INSERT_CODE
	      , D.USER_NAME AS INSERT_NAME
        , A.INSERT_DATE
        , A.UPDATE_CODE
	      , E.USER_NAME AS UPDATE_NAME
        , A.UPDATE_DATE  
        ,(SELECT COUNT(1) FROM T_STORE WHERE  COMPANY_CODE = A.COMPANY_CODE AND STATUS = 0) AS STORE_CNT0 /*준비중*/
		    ,(SELECT COUNT(1) FROM T_STORE WHERE  COMPANY_CODE = A.COMPANY_CODE AND STATUS = 1) AS STORE_CNT1 /*운영중*/
		    ,(SELECT COUNT(1) FROM T_STORE WHERE  COMPANY_CODE = A.COMPANY_CODE AND STATUS = 9) AS STORE_CNT9 /*폐업*/
      FROM T_COMPANY A
     INNER JOIN T_COMMON B
        ON B.MAIN_CODE = 'C003'
       AND B.SUB_CODE = A.COMPANY_TYPE
       INNER JOIN T_COMMON B2
        ON B2.MAIN_CODE = 'C004'
       AND B2.SUB_CODE = A.COMPANY_TYPE2
     INNER JOIN T_COMMON C
        ON C.MAIN_CODE = 'S001'
       AND C.SUB_CODE = A.STATUS
     INNER JOIN T_MEMBER D
        ON A.INSERT_CODE = D.MEMBER_CODE
     INNER JOIN T_MEMBER E
        ON A.UPDATE_CODE = E.MEMBER_CODE
    WHERE 1=1
      #[COMPANY_CODE]
      #[COMPANY_ID]
      #[COMPANY_NAME]
      #[COMPANY_TYPE]
      #[STATUS]
      #[INSERT_NAME]
     )
  SELECT *, (SELECT COUNT(1) FROM T_TABLE) TOTAL_ROWCOUNT FROM T_TABLE
   WHERE SEQ > (@PAGE -1) * @PAGE_COUNT
     AND SEQ <= @PAGE * @PAGE_COUNT
   SET NOCOUNT OFF
      ]]>
      </FixedSQL>
      <DynamicBodys>
        <Key>COMPANY_CODE</Key>
        <Body>AND A.COMPANY_CODE = {0} </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>COMPANY_ID</Key>
        <Body>AND A.COMPANY_ID = '{0}' </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>COMPANY_NAME</Key>
        <Body>AND A.COMPANY_TYPE = {0} </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>COMPANY_TYPE</Key>
        <Body>AND A.COMPANY_NAME LIKE N'%{0}%' </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>STATUS</Key>
        <Body>AND A.STATUS = '{0}' </Body>
      </DynamicBodys>
    <DynamicBodys>
        <Key>INSERT_NAME</Key>
        <Body>AND D.USER_NAME LIKE N'%{0}%' </Body>
      </DynamicBodys>
    </TemplateSQL>
  </DBAgentTemplate>
</DBAgentMultiTemplate>