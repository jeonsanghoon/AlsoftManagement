<?xml version="1.0" encoding="utf-8" ?>
<DBAgentMultiTemplate  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://altsoft.kr/">
  <DBAgentTemplate TemplateID="GetDeviceStationPlaceList">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>로컬박스 장소 조회</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2017-12-07</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
	SET NOCOUNT ON 
	/***************************************************************/
	/* 로컬박스장소 - T_DEVICE_STATION_PLACE 조회 -  SELECT QUERY  */ 
  /* GetDeviceStationPlaceList                                   */
	/***************************************************************/
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
	SELECT 
        A.IDX
      , A.STATION_CODE
      , A.IS_RANGE
      , A.CK_CODE
      , A.REGION
      , A.JIBUN_ADDRESS
      , A.ROAD_ADDRESS
      , A.BUILDING
      , A.ZIP_CODE
      , A.LATITUDE
      , A.LONGITUDE
      , A.RADIUS
      , A.INSERT_CODE
      , B.USER_NAME AS INSERT_NAME
      , A.INSERT_DATE
	FROM T_DEVICE_STATION_PLACE A 
 INNER JOIN T_MEMBER B
    ON A.INSERT_CODE = B.MEMBER_CODE
  WHERE 1=1 
   #[IDX]
   #[STATION_CODE]
   #[IS_RANGE]
   #[CK_CODE]
   #[REGION]
   #[JIBUN_ADDRESS]
   #[ROAD_ADDRESS]
   #[ROAD_ADDRESS]
   #[BUILDING]
   #[ZIP_CODE]
   
   ORDER BY A.JIBUN_ADDRESS
	SET NOCOUNT OFF 


  ]]>
      </FixedSQL>
      <DynamicBodys>
        <Key>IDX</Key>
        <Body>
          <![CDATA[ AND A.IDX = {0}]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>STATION_CODE</Key>
        <Body>
          <![CDATA[ AND A.STATION_CODE = {0}]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>CK_CODE</Key>
        <Body>
          <![CDATA[ AND A.CK_CODE = {0}]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>REGION</Key>
        <Body>
          <![CDATA[ AND A.REGION LIKE N'%{0}%']]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>JIBUN_ADDRESS</Key>
        <Body>
          <![CDATA[ AND A.JIBUN_ADDRESS LIKE N'%{0}%']]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>ROAD_ADDRESS</Key>
        <Body>
          <![CDATA[ AND A.ROAD_ADDRESS LIKE N'%{0}%']]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>BUILDING</Key>
        <Body>
          <![CDATA[ AND A.BUILDING LIKE N'%{0}%']]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>ZIP_CODE</Key>
        <Body>
          <![CDATA[ AND A.ZIP_CODE = N'{0}']]>
        </Body>
      </DynamicBodys>
        <DynamicBodys>
            <Key>IS_RANGE</Key>
            <Body>
                <![CDATA[ AND A.IS_RANGE = {0}]]>
            </Body>
        </DynamicBodys>
    </TemplateSQL>
  </DBAgentTemplate>

  <DBAgentTemplate TemplateID="DeviceStationPlaceSave">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>로컬박스 장소 저장</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2017-12-07</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
	SET NOCOUNT ON 
	/**********************************************/
	/* 로컬박스장소 - T_DEVICE_STATION_PLACE 저장 */
  /* -  SAVE QUERY                              */ 
	/**********************************************/
	DECLARE @IDX                            BIGINT             = N'{0}'
			  , @STATION_CODE                   INT            = CONVERT(INT, CASE WHEN ISNUMERIC('{1}') = 1 THEN '{1}' ELSE NULL END )
			  , @IS_RANGE                      BIT             = CONVERT(BIT, CASE WHEN ISNUMERIC('{2}') = 1 THEN '{2}' ELSE '0' END )
			  , @CK_CODE                        INT            = CONVERT(INT, CASE WHEN ISNUMERIC('{3}') = 1 THEN '{3}' ELSE NULL END )
			  , @REGION                         NVARCHAR(100)  = N'{4}'
			  , @JIBUN_ADDRESS                  NVARCHAR(200)  = N'{5}'
			  , @ROAD_ADDRESS                   NVARCHAR(200)  = N'{6}'
			  , @BUILDING                       NVARCHAR(50)   = N'{7}'
			  , @ZIP_CODE                       VARCHAR(5)     = N'{8}'
			  , @LATITUDE                       NUMERIC(20,16) = CONVERT(NUMERIC(20,16), CASE WHEN ISNUMERIC('{9}') = 1 THEN '{9}' ELSE NULL END )
			  , @LONGITUDE                     NUMERIC(20,16) = CONVERT(NUMERIC(20,16), CASE WHEN ISNUMERIC('{10}') = 1 THEN '{10}' ELSE NULL END )
			  , @RADIUS                         INT            = CONVERT(INT, CASE WHEN ISNUMERIC('{11}') = 1 THEN '{11}' ELSE NULL END )
			  , @USE_DATE                       DATETIME       = GETDATE()
			  , @INSERT_CODE                    INT            = {12}
			  , @INSERT_DATE                    DATETIME       = GETDATE() 
  
  SET @RADIUS = CASE WHEN @IS_RANGE = 1 THEN @RADIUS ELSE 0 END
  
  /*지역 정보 유무 확인 후 없으면 추가 후 T_CATEGORY_KEYWORD 의 CK_CODE 리턴*/
  EXEC SP_ADD_CK_DATA @REGION, @INSERT_CODE, @CK_CODE OUTPUT
	
	UPDATE A 
	SET  	  STATION_CODE                   = @STATION_CODE                  
			 ,  IS_RANGE                      = @IS_RANGE                     		 ,  CK_CODE                        = @CK_CODE                       
			 ,  REGION                         = @REGION                        		 ,  JIBUN_ADDRESS                  = @JIBUN_ADDRESS                 
			 ,  ROAD_ADDRESS                   = @ROAD_ADDRESS                  		 ,  BUILDING                       = @BUILDING                      
			 ,  ZIP_CODE                       = @ZIP_CODE                      		 ,  LATITUDE                       = @LATITUDE                      
			 ,  LONGITUDE                     = @LONGITUDE                    		 ,  RADIUS                         = @RADIUS                        
			 ,  USE_DATE                       = @USE_DATE                      
	FROM T_DEVICE_STATION_PLACE A 
	WHERE IDX= @IDX
	IF @@ROWCOUNT = 0
	BEGIN
    
        IF @STATION_CODE <=0 OR @STATION_CODE IS NULL
        BEGIN
            SELECT @STATION_CODE = ISNULL(MAX(STATION_CODE),0) + 1 FROM T_DEVICE_STATION_PLACE
        END
		INSERT INTO T_DEVICE_STATION_PLACE
		(		STATION_CODE                  		, IS_RANGE                     		, CK_CODE                       		
			, REGION                        		, JIBUN_ADDRESS                 		, ROAD_ADDRESS                  		, BUILDING                      		
			, ZIP_CODE                      		, LATITUDE                      		, LONGITUDE                    		, RADIUS                        		
			, USE_DATE                      		, INSERT_CODE                   		, INSERT_DATE                   		
		)
		SELECT @STATION_CODE                 		, @IS_RANGE                    	
				, @CK_CODE                      		, @REGION                       		, @JIBUN_ADDRESS                	
				, @ROAD_ADDRESS                 		, @BUILDING                     		, @ZIP_CODE                     	
				, @LATITUDE                     		, @LONGITUDE                   		, @RADIUS                       	
				, @USE_DATE                     		, @INSERT_CODE                  		, @INSERT_DATE                  	
			
         SELECT CONVERT(VARCHAR(30), IDENT_CURRENT( 'T_DEVICE_STATION_PLACE' ))  AS DATA
         --GOTO EXCEPTION
	 END

   UPDATE T_SEARCH_KEYWORD
     SET UPDATE_CODE = @INSERT_CODE
        ,UPDATE_DATE = @INSERT_DATE
   WHERE STATION_CODE = @STATION_CODE
     AND CK_CODE = @CK_CODE
  IF NOT EXISTS (SELECT * FROM T_SEARCH_KEYWORD
                  WHERE STATION_CODE = @STATION_CODE
                    AND CK_CODE = @CK_CODE
     )
  BEGIN
      INSERT INTO T_SEARCH_KEYWORD
      (STATION_CODE, CK_CODE, INSERT_CODE, INSERT_DATE, UPDATE_CODE, UPDATE_DATE)
      SELECT @STATION_CODE, @CK_CODE, @INSERT_CODE, GETDATE() , @INSERT_CODE, GETDATE()
  END
  SELECT ''  AS ERROR_MESSAGE
EXCEPTION:
SET NOCOUNT OFF
  ]]>
      </FixedSQL>

    </TemplateSQL>
  </DBAgentTemplate>


  <DBAgentTemplate TemplateID="DeviceStationPlaceDelete">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>로컬박스 장소 삭제</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2017-12-07</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
	SET NOCOUNT ON 
	/**********************************************/
	/* 로컬박스장소 - T_DEVICE_STATION_PLACE 삭제 */
  /* - DELETE  QUERY                            */ 
	/**********************************************/
	DECLARE @STATION_CODE INT = {0}
          , @IS_RANGE   BIT = CONVERT(BIT, CASE WHEN ISNUMERIC('{1}') = 1 THEN '{1}' ELSE '0' END )
  
  

    DELETE A FROM T_SEARCH_KEYWORD A
    INNER JOIN T_CATEGORY_KEYWORD B
       ON A.CK_CODE = B.CK_CODE
    INNER JOIN T_DEVICE_STATION_PLACE C
       ON A.STATION_CODE = C.STATION_CODE
      AND C.REGION LIKE 'N%' + B.KEYWORD_NAME + '%'
    WHERE A.STATION_CODE = @STATION_CODE
      AND  ((@IS_RANGE <> 1 AND IS_RANGE = @IS_RANGE) OR (@IS_RANGE = 1 ))

  DELETE FROM T_DEVICE_STATION_PLACE
     WHERE STATION_CODE = @STATION_CODE
       AND  ((@IS_RANGE <> 1 AND IS_RANGE = @IS_RANGE) OR (@IS_RANGE = 1 ))
   SELECT '' AS ERROR_MESSAGE
  
  ]]>
      </FixedSQL>

    </TemplateSQL>
  </DBAgentTemplate>
</DBAgentMultiTemplate>


