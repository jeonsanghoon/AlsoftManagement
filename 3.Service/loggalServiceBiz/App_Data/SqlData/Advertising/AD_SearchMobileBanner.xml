<?xml version="1.0" encoding="utf-8" ?>
<DBAgentMultiTemplate  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://altsoft.kr/">
	<DBAgentTemplate TemplateID="Ad_SearchMobileBanner">
		<!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
		<Information>
			<SqlType>DynamicSQL</SqlType>
			<Description>모바일 배너 검색</Description>
			<SQLModifier>권용현</SQLModifier>
			<LastModifyDate>2019-11-06</LastModifyDate>
		</Information>

		<TemplateSQL>
			<!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
			<FixedSQL>
				<![CDATA[ 
				 
	/************************************************************/
	/* 모바일 배너 검색 Ad_SearchMobileBanner				    */ 
	/************************************************************/
  SET ARITHABORT ON 

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	
	DECLARE @PAGE_COUNT		INT				= {0}
          , @PAGE			INT				= {1}
          , @MEMBER_CODE	INT				= {2}
	      , @LATITUDE		NUMERIC(20, 16) = {3}
		  , @LONGITUDE	    NUMERIC(20, 16) = {4}

   DECLARE @TBL_VAR TABLE 
    (   
	    ROW_INDEX       BIGINT,
		AD_CODE			BIGINT NOT NULL,
		BANNER_TYPE		INT,
		STORE_NAME		NVARCHAR(100) NOT NULL,
		TITLE			NVARCHAR(200) NOT NULL,
		SUB_TITLE		NVARCHAR(200) NOT NULL, 
		LOGO_URL		NVARCHAR(200) NOT NULL,
		CLICK_CNT		INT,
		GARDE_POINT		NUMERIC,
		COMPANY_CODE	INT,
		STORE_CODE		INT,
		CONTENT_TYPE	INT,
		COMPANY_NAME	NVARCHAR(100) NOT NULL,
		MEMBER_CODE		INT,
		MEMBER_NAME		NVARCHAR(100) NOT NULL,
		AD_DISTANCE		NUMERIC(15, 5),
		BOOKMARK_YN		BIT,
		FAVIRUTE_YN		BIT
    )
	
	DECLARE @SEARCH_LATITUDE NUMERIC(4,2)	= 0.0,
			@SEARCH_LONGITUDE NUMERIC(5,2)	= 0.0,
			@IDX BIGINT						= 0,
		    @AD_CODES NVARCHAR(MAX)			= '',
			@DATE DATETIME					= GETDATE(),
			@REG_DATE VARCHAR(8)			= '',
			@NOW_DATE VARCHAR(8)			= '',
			@UTC_DATE VARCHAR(8)			= CONVERT(VARCHAR(8), GETUTCDATE(),112),
            @UTC_TIME VARCHAR(5)			= CONVERT(VARCHAR(5), GETUTCDATE(),108)

	SET @SEARCH_LATITUDE	= FLOOR(@LATITUDE * 100) / 100.00
	SET	@SEARCH_LONGITUDE	= FLOOR(@LONGITUDE * 100) / 100.00
	SET @NOW_DATE			= CONVERT(CHAR(8), @DATE, 112)

	-- AD_CDOES 값 셋팅
	SELECT 
		  @IDX = IDX
	    , @AD_CODES = AD_CODES
		, @REG_DATE = REG_DATE
     FROM T_SEARCH_PLACE_SQUARE
    WHERE SEARCH_LATITUDE = @SEARCH_LATITUDE 
      AND SEARCH_LONGITUDE = @SEARCH_LONGITUDE 
      AND SOUTH_LATITUDE <= @LATITUDE
      AND NORTH_LATITUDE >= @LATITUDE
      AND WEST_LONGITUDE <= @LONGITUDE
      AND EAST_LONGITUDE >= @LONGITUDE

	INSERT INTO @TBL_VAR
	SELECT ROW_NUMBER() OVER(ORDER BY {5} ) ROW_INDEX, *
	FROM (
		 SELECT  
                 A.AD_CODE
               , A.BANNER_TYPE
               , ST.STORE_NAME AS STORE_NAME
               , A.TITLE
			   , A.SUB_TITLE
	           , CASE WHEN A.BANNER_TYPE = 3 THEN ISNULL(N.FILE_URL,A.LOGO_URL) ELSE A.LOGO_URL END LOGO_URL
               , A.CLICK_CNT
			   , A.GRADE_POINT
               , A.COMPANY_CODE
               , A.STORE_CODE
               , A.CONTENT_TYPE
			   , J.COMPANY_NAME AS COMPANY_NAME
	           , A.MEMBER_CODE
	           , ISNULL(I.USER_NAME,'') AS MEMBER_NAME
               , ISNULL(PLACE_DISTANCE,9999999999) AS AD_DISTANCE
               , ISNULL(O.BOOKMARK_YN,0) AS BOOKMARK_YN
               , ISNULL(O.FAVORITE_YN,0) AS FAVORITE_YN
          FROM T_AD A
	      LEFT JOIN (
                 /* -1 * ( RADIUS ) * 100 - (RADIUS-DISTANCE) 는 반경만으로 비교시 같을 경우 거리가 작은 순으로 조회 하기 위함*/
	             SELECT AD_CODE, MIN(CASE WHEN DISTANCE - RADIUS <= 0 THEN -1 * ( RADIUS ) * 100 - (RADIUS-DISTANCE) ELSE DISTANCE - RADIUS END) AS PLACE_DISTANCE
			     FROM
	             (
				     SELECT AD_CODE
				 	     , dbo.FN_TO_DISTANCE(@LATITUDE, @LONGITUDE, LATITUDE, LONGITUDE,'M') AS DISTANCE 
				 	     , RADIUS
				     FROM T_AD_PLACE
			     ) AA
			     GROUP BY AA.AD_CODE 
	                 ) A1 ON A.AD_CODE = A1.AD_CODE

           LEFT JOIN T_AD_DEVICE B
             ON A.AD_CODE = B.AD_CODE
           LEFT JOIN T_DEVICE C
             ON B.DEVICE_CODE = C.DEVICE_CODE
           LEFT JOIN T_SEARCH_KEYWORD E
             ON A.AD_CODE = E.AD_CODE OR C.DEVICE_CODE = E.DEVICE_CODE
           LEFT JOIN T_CATEGORY_KEYWORD F
             ON E.CK_CODE = F.CK_CODE
           LEFT JOIN T_CATEGORY G
             ON F.CATEGORY_CODE = G.CATEGORY_CODE
           LEFT JOIN T_KEYWORD H
             ON H.KEYWORD_CODE = F.KEYWORD_CODE
           LEFT JOIN T_MEMBER I
             ON A.MEMBER_CODE = I.MEMBER_CODE
           LEFT JOIN T_COMPANY J
             ON J.COMPANY_CODE = A.COMPANY_CODE 
           LEFT JOIN T_STORE ST
             ON A.STORE_CODE = ST.STORE_CODE
           LEFT JOIN T_CATEGORY K
             ON K.CATEGORY_CODE = A.REP_CATEGORY_CODE
           LEFT JOIN  T_SEARCH_KEYWORD L
	         ON A.AD_CODE = L.AD_CODE 
	       LEFT JOIN T_KEYWORD M
	         ON L.KEYWORD_CODE = M.KEYWORD_CODE  
           LEFT JOIN T_FILE N
             ON N.TABLE_NAME = 'T_AD'
            AND N.TABLE_KEY  = CONVERT(VARCHAR(20), A.AD_CODE)
            AND N.FILE_SEQ	  = 1
	       LEFT JOIN (SELECT AD_CODE, CONVERT(BIT, MAX(CASE WHEN BOOKMARK_KIND = 1 THEN 1 ELSE 0 END)) AS BOOKMARK_YN
		                , CONVERT(BIT, MAX(CASE WHEN BOOKMARK_KIND = 2 THEN 1 ELSE 0 END)) AS FAVORITE_YN
	                    FROM T_MEMBER_BOOKMARK A
	                   WHERE MEMBER_CODE = @MEMBER_CODE
				    GROUP BY AD_CODE
			          ) O
		   ON O.AD_CODE = A.AD_CODE
		   WHERE 1=1
		   AND (
				 /*광고 코드 값이 있을 경우*/
			     ((@AD_CODES <> '') 
				   AND (A.AD_CODE IN (SELECT VAL1 FROM FN_SPLIT (@AD_CODES, ',')))
				 )
		         /*광고 코드 값이 없을 경우*/
		     OR ((@AD_CODES = '')
		          AND (A.AD_TYPE IN (0,1,3)
                  /*현재 타임 기준 광고시간 체크*/
				  AND ((
				           B.FR_DATE <= DATEADD(HOUR, C.TIME_ZONE, @UTC_DATE)
				           AND B.TO_DATE >= DATEADD(HOUR, C.TIME_ZONE, @UTC_DATE)
				           /*나라 마다 기준 시간이 다르기 때문에 서버 시간을 기준으로 등록한 광고 UTC시간을 더하여 24시간 기준 광고 시간을 표시한다.*/
				           AND B.FR_TIME <=  CASE WHEN ISNULL( B.FR_TIME,'') = '' THEN B.FR_TIME ELSE  CONVERT(VARCHAR(5), DATEADD(HOUR, C.TIME_ZONE, @UTC_DATE + ' ' + @UTC_TIME), 108) END
				           AND B.TO_TIME >=  CASE WHEN ISNULL( B.FR_TIME,'') = '' THEN B.TO_TIME ELSE  CONVERT(VARCHAR(5), DATEADD(HOUR, C.TIME_ZONE, @UTC_DATE + ' ' + @UTC_TIME), 108) END
				           ) OR 
				           (
				           /*현재 타임 기준 광고시간 체크*/
				            A.FR_DATE <= DATEADD(HOUR, ISNULL(C.TIME_ZONE,9), @UTC_DATE)
				           AND A.TO_DATE >= DATEADD(HOUR, ISNULL(C.TIME_ZONE,9), @UTC_DATE)
				           /*나라 마다 기준 시간이 다르기 때문에 서버 시간을 기준으로 등록한 광고 UTC시간을 더하여 24시간 기준 광고 시간을 표시한다.*/
				           AND A.FR_TIME <=  CASE WHEN ISNULL( A.FR_TIME,'') = '' THEN A.FR_TIME ELSE  CONVERT(VARCHAR(5), DATEADD(HOUR, ISNULL(C.TIME_ZONE,9), @UTC_DATE + ' ' + @UTC_TIME), 108) END
				           AND A.TO_TIME >=  CASE WHEN ISNULL( A.FR_TIME,'') = '' THEN A.TO_TIME ELSE  CONVERT(VARCHAR(5), DATEADD(HOUR, ISNULL(C.TIME_ZONE,9), @UTC_DATE + ' ' + @UTC_TIME), 108) END
			          ))
			      AND (A.HIDE = 0))
				 )
			   )
      GROUP BY A.AD_CODE
              ,A.BANNER_TYPE
              ,A.STORE_CODE
              ,A.CONTENT_TYPE
              ,A.LOGO_URL
              ,A.CLICK_CNT, A.GRADE_POINT
              ,A.COMPANY_CODE
              ,A.TITLE, A.SUB_TITLE
              ,A.REP_CATEGORY_CODE 
              ,ST.STORE_NAME                                                                                                                                                                                            
              ,K.CATEGORY_NAME
	          ,J.COMPANY_NAME 
	          ,A.MEMBER_CODE
	          ,I.USER_NAME
              ,ST.STORE_NAME
              ,A1.PLACE_DISTANCE
              ,A1.AD_CODE
              ,N.FILE_URL
              ,O.BOOKMARK_YN
              ,O.FAVORITE_YN
        ) A

    -- AD_CODES 유무 및
	-- 등록 날짜가 오늘 날짜인지 체크
	IF ISNULL(@AD_CODES, '') = '' OR
	   ISNULL(@REG_DATE, '') < @NOW_DATE
	BEGIN
		  SET @AD_CODES = STUFF((SELECT ',' + CONVERT(NVARCHAR(10), AD_CODE) 
		 FROM @TBL_VAR 
		  FOR XML PATH('')),1,1,'')
		  
		 UPDATE T_SEARCH_PLACE_SQUARE 
		    SET AD_CODES = @AD_CODES
			  , REG_DATE = @NOW_DATE
			  , UPDATE_DATE = @DATE
	      WHERE IDX = @IDX
	END
	
	UPDATE T_SEARCH_PLACE_SQUARE 
	   SET SEARCH_CNT = ISNULL(SEARCH_CNT, 0) + 1
     WHERE IDX = @IDX

	

	SELECT * FROM @TBL_VAR
	WHERE ROW_INDEX BETWEEN 
	      (@PAGE_COUNT * (@PAGE -1)) + 1 
	    AND (@PAGE_COUNT * @PAGE) 
		
	SET NOCOUNT OFF  
   
 SET ARITHABORT OFF
	
  ]]>
			</FixedSQL>
		</TemplateSQL>
	</DBAgentTemplate>
	<DBAgentTemplate TemplateID="Ad_SearchMobileBanner2">
		<!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
		<Information>
			<SqlType>DynamicSQL</SqlType>
			<Description>모바일 배너 검색</Description>
			<SQLModifier>전상훈</SQLModifier>
			<LastModifyDate>2019-11-012</LastModifyDate>
		</Information>

		<TemplateSQL>
			<!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
			<FixedSQL>
				<![CDATA[ 
				 
	/************************************************************/
	/* 모바일 배너 검색 Ad_SearchMobileBanner2				    */ 
	/* 가상영역유형(ITEM_TYPE) 별로 건수를 비율별로 조회함	    */ 
	/************************************************************/
  SET ARITHABORT ON 

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	
	DECLARE @PAGE_COUNT		INT				= {0}
          , @PAGE			INT				= {1}
          , @MEMBER_CODE	INT				= {2}
	      , @LATITUDE		NUMERIC(20, 16) = {3}
		  , @LONGITUDE	    NUMERIC(20, 16) = {4}
          , @UTC_DATE       VARCHAR(8)		= CONVERT(VARCHAR(8), GETUTCDATE(),112)
          , @UTC_TIME       VARCHAR(5)		= CONVERT(VARCHAR(5), GETUTCDATE(),108)
          , @TIME_ZONE      INT = 9
          , @SQL_DESC       NVARCHAR(MAX)
    
    DECLARE @SEARCH_LATITUDE NUMERIC(4,2)	= FLOOR(@LATITUDE * 100) / 100.00,
    		@SEARCH_LONGITUDE NUMERIC(5,2)	= FLOOR(@LONGITUDE * 100) / 100.00,
    		@IDX         BIGINT						= 0,
    	    @AD_CODES    NVARCHAR(MAX)			= '',
    		@REG_DATE    VARCHAR(8)            = '',
    		@RANK_CNT    INT = 8,
			@TOTAL       NUMERIC(18,2) = 0
			
    

    
    	-- AD_CDOES 값 셋팅
    	SELECT 
    		  @IDX = IDX
    	    , @AD_CODES = ISNULL(AD_CODES,'')
    		, @REG_DATE = ISNULL(REG_DATE,'')
			
         FROM T_SEARCH_PLACE_SQUARE
        WHERE SEARCH_LATITUDE = @SEARCH_LATITUDE 
          AND SEARCH_LONGITUDE = @SEARCH_LONGITUDE 
          AND SOUTH_LATITUDE <= @LATITUDE
          AND NORTH_LATITUDE >= @LATITUDE
          AND WEST_LONGITUDE <= @LONGITUDE
          AND EAST_LONGITUDE >= @LONGITUDE
    	  
    	DECLARE @TABLE TABLE
    	(   
    	    IDX            BIGINT
    	   ,AD_CODE        BIGINT
    	   ,BANNER_TYPE    INT
    	   ,STORE_NAME     NVARCHAR(100)
    	   ,TITLE          NVARCHAR(200)
           ,SUB_TITLE      NVARCHAR(200)
           ,LOGO_URL       NVARCHAR(200)
           ,CLICK_CNT      INT
           ,GRADE_POINT	   numeric(5,2)
           ,COMPANY_CODE   INT
           ,STORE_CODE     INT
           ,CONTENT_TYPE   INT
           ,COMPANY_NAME   NVARCHAR(100)
           ,MEMBER_CODE    INT
           ,MEMBER_NAME    NVARCHAR(50)
           ,ITEM_TYPE      INT
           ,AD_DISTINCE    NUMERIC(38,5)
           ,BOOKMARK_YN    BIT
           ,FAVORITE_YN    BIT
           ,ITEM_TYPE_RANK BIGINT      
    	)

		DECLARE @TABLE2 TABLE
		(
			AD_CODE BIGINT
		  , ITEM_TYPE_RANK BIGINT
		   , ITEM_TYPE INT
        )

    	  
    	IF  @REG_DATE <> CONVERT(VARCHAR(8),GETDATE(),112)
    	BEGIN
    	    INSERT INTO @TABLE2
			SELECT A.AD_CODE
	             , ROW_NUMBER() OVER (PARTITION BY A.ITEM_TYPE ORDER BY ISNULL(PLACE_DISTANCE,9999999999), DISTANCE) as ITEM_TYPE_RANK 
	              ,A.ITEM_TYPE
				FROM T_AD A
	           LEFT JOIN (
			   /*
                순위 계산은 ITEM_TYPE와 무관한 가상영역만으로 정의 함
                 1. 가상범위 안에 있을 경우
                   ㄱ. -1 * (반경 + 10000000000)  + 중심점으로 부터 거리
                      => 반경안에 있으면 마이너스 데이터를 만들어 순위를 높게 정의 함
                      =>반경이 가장 큰것 우선이며 그중 중심점으로 부터 가까운 거리에 있는 데이터를 우선 순위를 줌
                 2. 가상범위 밖에 있을 경우
                  ㄱ. 중심점으로 부터 거리 - 반경을 하여 가상범위에 가장 근접한 데이터에 우선순위를 줌
               */
					 SELECT AD_CODE, MIN(CASE WHEN DISTANCE - RADIUS <= 0 THEN  (-1 * ( RADIUS  + 10000000000)) + DISTANCE ELSE DISTANCE - RADIUS END) AS PLACE_DISTANCE, MIN(DISTANCE) AS DISTANCE
					   FROM
						  (
	           				  SELECT AD_CODE
	               				   , dbo.FN_TO_DISTANCE(@LATITUDE, @LONGITUDE, LATITUDE, LONGITUDE,'M') AS DISTANCE 
	               				   , RADIUS
	           				  FROM T_AD_PLACE
					   ) AA
					   GROUP BY AA.AD_CODE 
				 ) A1 ON A.AD_CODE = A1.AD_CODE
	           
			  INNER JOIN T_COMMON TC
	             ON TC.MAIN_CODE = 'A006'
	            AND TC.SUB_CODE  = A.AD_TYPE 
	            AND ',' + TC.REF_DATA2 +',' LIKE '%,1,%' /*모바일 배너로 등록된 거만 나오게 처리*/
			  WHERE A.HIDE = 0
				 AND A.STATUS = 9
				  AND  A.FR_DATE <= DATEADD(HOUR, ISNULL(@TIME_ZONE,9), @UTC_DATE)
				  AND A.TO_DATE >= DATEADD(HOUR, ISNULL(@TIME_ZONE,9), @UTC_DATE)
				  /*나라 마다 기준 시간이 다르기 때문에 서버 시간을 기준으로 등록한 광고 UTC시간을 더하여 24시간 기준 광고 시간을 표시한다.*/
				  AND A.FR_TIME <=  CASE WHEN ISNULL( A.FR_TIME,'') = '' THEN A.FR_TIME ELSE  CONVERT(VARCHAR(5), DATEADD(HOUR, ISNULL(@TIME_ZONE,9), @UTC_DATE + ' ' + @UTC_TIME), 108) END
				  AND A.TO_TIME >=  CASE WHEN ISNULL( A.FR_TIME,'') = '' THEN A.TO_TIME ELSE  CONVERT(VARCHAR(5), DATEADD(HOUR, ISNULL(@TIME_ZONE,9), @UTC_DATE + ' ' + @UTC_TIME), 108) END
		   SET @TOTAL = @@ROWCOUNT	
		   SET @TOTAL = CASE WHEN @TOTAL = 0 THEN 1 ELSE @TOTAL END
		   --select @TOTAL
		   SET @AD_CODES = STUFF(( 
		                       SELECT ',', CONVERT(VARCHAR(10), A.AD_CODE) FROM @TABLE2 A
		                       INNER JOIN (SELECT ITEM_TYPE, COUNT(*) CNT
		                                     FROM @TABLE2
		                                    GROUP BY ITEM_TYPE
		                       			) B ON A.ITEM_TYPE = B.ITEM_TYPE
                               ORDER BY CONVERT(vARCHAR(15), 100000000000000 + FLOOR((A.ITEM_TYPE_RANK-1)/(B.CNT/@TOTAL * @RANK_CNT))) + CONVERT(VARCHAR(20), 10000000 + A.ITEM_TYPE)
		      FOR XML PATH('') ,TYPE).value('.', 'VARCHAR(max)'), 1, 1, '')
    	  END		
    	
    	   
    	
    	    INSERT INTO @TABLE
    		SELECT B.IDX
    			, A.AD_CODE
    			, A.BANNER_TYPE
    			, ST.STORE_NAME
    			, A.TITLE
    			, A.SUB_TITLE
    			, A.LOGO_URL
    			, A.CLICK_CNT
    			, A.GRADE_POINT
    			, A.COMPANY_CODE
    			, A.STORE_CODE
    			, A.CONTENT_TYPE
    			, CP.COMPANY_NAME
    			, A.MEMBER_CODE
    			, A.MEMBER_NAME
    			, A.ITEM_TYPE
    			, 0 AS AD_DISTINCE
    			, ISNULL(O.BOOKMARK_YN,0) AS BOOKMARK_YN
    			, ISNULL(O.FAVORITE_YN,0) AS FAVORITE_YN
    			, ''
    		FROM T_AD A
    		INNER JOIN FN_SPLIT(@AD_CODES,',') B
    			ON A.AD_CODE = CONVERT(BIGINT,B.VAL1)
    		INNER JOIN T_STORE ST
    			ON A.STORE_CODE = ST.STORE_CODE
    		INNER JOIN T_COMPANY CP
    			ON A.COMPANY_CODE = CP.COMPANY_CODE
    			LEFT JOIN (SELECT AD_CODE, CONVERT(BIT, MAX(CASE WHEN BOOKMARK_KIND = 1 THEN 1 ELSE 0 END)) AS BOOKMARK_YN
    			                , CONVERT(BIT, MAX(CASE WHEN BOOKMARK_KIND = 2 THEN 1 ELSE 0 END)) AS FAVORITE_YN
    			            FROM T_MEMBER_BOOKMARK A
    			            WHERE MEMBER_CODE = @MEMBER_CODE
    			 		GROUP BY AD_CODE
    			 	) O
    			ON O.AD_CODE = A.AD_CODE
    
    		   
    	

		
    	UPDATE T_SEARCH_PLACE_SQUARE
    	SET AD_CODES = @AD_CODES
    		,REG_DATE = CONVERT(VARCHAR(8), GETDATE(),112)
    		,UPDATE_DATE = GETDATE()
    		,SEARCH_CNT = ISNULL(SEARCH_CNT,0) + 1		  
    	WHERE IDX = @IDX
    
    	SELECT * FROM @TABLE
    	WHERE IDX > (@PAGE -1) * @PAGE_COUNT
    	  AND IDX <= @PAGE * @PAGE_COUNT
    		
	SET NOCOUNT OFF  
   
 SET ARITHABORT OFF
	
  ]]>
			</FixedSQL>
		</TemplateSQL>
	</DBAgentTemplate>
</DBAgentMultiTemplate>