<?xml version="1.0" encoding="utf-8" ?>
<DBAgentMultiTemplate  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://altsoft.kr/">
  <DBAgentTemplate TemplateID="GetDeviceStationList">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>기기 스테이션 조회</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2017-11-23</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
	SET NOCOUNT ON 
    /*****************************************************************/
    /* 박스 스테이션(위치가 없는 로컬박스의 묶음 - 관리자가 생성가능)    */
    /* GetDeviceStationList - T_DEVICE_STATION 조회 -  SELECT QUERY  */ 
    /*****************************************************************/
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 

    DECLARE @PAGE INT = {0}
           ,@PAGE_COUNT INT = {1};
   WITH T_TABLE
   AS (
     SELECT ROW_NUMBER() OVER(ORDER BY {2}) AS IDX 
		, * FROM
     (
	  SELECT
          A.STATION_CODE
		    , A.STATION_NAME
		    , A.CATEGORY_CODE
		    , A.ADDRESS1
		    , A.ADDRESS2
		    , A.ZIP_CODE
		    , A.LATITUDE
		    , A.LONGITUDE
		    , A.STATION_DESC
        , A.REAMRK
        , A.HIDE
		    , A.INSERT_CODE
        , B.USER_NAME AS INSERT_NAME
		    , A.INSERT_DATE
		    , A.UPDATE_CODE
        , C.USER_NAME AS UPDATE_NAME
		    , A.UPDATE_DATE
        , (SELECT COUNT(1) FROM T_DEVICE WHERE STATION_CODE = A.STATION_CODE AND HIDE = 0) AS DEVICE_CNT
        , (SELECT COUNT(1) FROM T_DEVICE 
            WHERE STATION_CODE = A.STATION_CODE
              AND DATEDIFF(day, A.INSERT_DATE, getdate()) <= 7 
            ) AS NEW_DEVICE_CNT
        , ISNULL(FF.FILE_URL, '') AS LOGO_URL
	 FROM T_DEVICE_STATION A 
    INNER JOIN T_MEMBER B
       ON A.INSERT_CODE = B.MEMBER_CODE
    INNER JOIN T_MEMBER C
       ON A.UPDATE_CODE = C.MEMBER_CODE
     LEFT JOIN T_FILE FF
       ON FF.TABLE_NAME = 'T_DEVICE_STATION'
      AND FF.TABLE_KEY  = CONVERT(VARCHAR(20), A.STATION_CODE)
      AND FF.FILE_SEQ   = 1
      AND FF.REF_DATA1  = '1'
    WHERE 1=1
      #[STATION_CODE]
      #[STATION_NAME]
      #[CATEGORY_CODE]
    ) A
    ) SELECT *,(SELECT COUNT(*) FROM T_TABLE) AS TOTAL_ROWCOUNT FROM T_TABLE
    WHERE IDX > (@PAGE-1) * @PAGE_COUNT AND IDX <=  @PAGE * @PAGE_COUNT 
	SET NOCOUNT OFF 


      ]]>
      </FixedSQL>
      <DynamicBodys>
        <Key>STATION_CODE</Key>
        <Body>
          <![CDATA[   AND A.STATION_CODE = {0} ]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>STATION_NAME</Key>
        <Body>
          <![CDATA[   AND A.STATION_NAME LIKE '%{0}%' ]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>CATEGORY_CODE</Key>
        <Body>
          <![CDATA[   AND A.CATEGORY_CODE = {0} ]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>CATEGORY_CODE</Key>
        <Body>
          <![CDATA[   AND A.HIDE = {0} ]]>
        </Body>
      </DynamicBodys>
    </TemplateSQL>
  </DBAgentTemplate>

  <DBAgentTemplate TemplateID="GetDeviceStationMapList">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>로컬스테이션 모바일지도조회</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2019-02-14</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
	SET NOCOUNT ON 
    /*****************************************************************/
    /* 로컬스테이션 모바일지도조회                                   */
    /* GetDeviceStationMapList - T_DEVICE_STATION  -  SELECT QUERY   */ 
    /*****************************************************************/
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 

    DECLARE @PAGE INT = {0}
           ,@PAGE_COUNT INT = {1};
   WITH T_TABLE
   AS (
     SELECT ROW_NUMBER() OVER(ORDER BY {2}) AS IDX 
		, * FROM
     (
	  SELECT
          A.STATION_CODE
		    , A.STATION_NAME
		    , A.CATEGORY_CODE
		    , A.ADDRESS1
		    , A.ADDRESS2 
		    , A.ZIP_CODE
		    , ISNULL(DP.LATITUDE, A.LATITUDE) AS LATITUDE
		    , ISNULL(DP.LONGITUDE, A.LONGITUDE) AS LONGITUDE
        , A.STATION_DESC
        , A.REAMRK
        , A.HIDE
		    , A.INSERT_CODE
        , B.USER_NAME AS INSERT_NAME
		    , A.INSERT_DATE
		    , A.UPDATE_CODE
        , C.USER_NAME AS UPDATE_NAME
		    , A.UPDATE_DATE
        , (SELECT COUNT(1) FROM T_DEVICE WHERE STATION_CODE = A.STATION_CODE AND HIDE = 0) AS DEVICE_CNT
        , (SELECT COUNT(1) FROM T_DEVICE 
            WHERE STATION_CODE = A.STATION_CODE
              AND DATEDIFF(day, A.INSERT_DATE, getdate()) <= 7 
               AND HIDE = 0
            ) AS NEW_DEVICE_CNT
         , ISNULL(FF.FILE_URL, '') AS LOGO_URL
	 FROM T_DEVICE_STATION A 
   LEFT JOIN T_DEVICE_STATION_PLACE DP
	  ON A.STATION_CODE = DP.STATION_CODE
	 AND DP.IS_RANGE = 0
    INNER JOIN T_MEMBER B
       ON A.INSERT_CODE = B.MEMBER_CODE
    INNER JOIN T_MEMBER C
       ON A.UPDATE_CODE = C.MEMBER_CODE
     LEFT JOIN T_FILE FF
       ON FF.TABLE_NAME = 'T_DEVICE_STATION'
      AND FF.TABLE_KEY  = CONVERT(VARCHAR(20), A.STATION_CODE)
      AND FF.FILE_SEQ   = 1
      AND FF.REF_DATA1  = '1'
    WHERE 1=1
      #[STATION_CODE]
      #[STATION_NAME]
      #[CATEGORY_CODE]
    ) A
    ) SELECT *,(SELECT COUNT(*) FROM T_TABLE) AS TOTAL_ROWCOUNT FROM T_TABLE
    WHERE IDX > (@PAGE-1) * @PAGE_COUNT AND IDX <=  @PAGE * @PAGE_COUNT 
	SET NOCOUNT OFF 


      ]]>
      </FixedSQL>
      <DynamicBodys>
        <Key>STATION_CODE</Key>
        <Body>
          <![CDATA[   AND A.STATION_CODE = {0} ]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>STATION_NAME</Key>
        <Body>
          <![CDATA[   AND A.STATION_NAME LIKE '%{0}%' ]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>CATEGORY_CODE</Key>
        <Body>
          <![CDATA[   AND A.CATEGORY_CODE = {0} ]]>
        </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>CATEGORY_CODE</Key>
        <Body>
          <![CDATA[   AND A.HIDE = {0} ]]>
        </Body>
      </DynamicBodys>
    </TemplateSQL>
  </DBAgentTemplate>

  <DBAgentTemplate TemplateID="DeviceStationSave">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>기기 스테이션 저장</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2017-11-23</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
	SET NOCOUNT ON 
	/********************************************************************/
	/* 박스 스테이션(위치가 없는 로컬박스의 묶음 - 관리자가 생성가능) - T_DEVICE_STATION 저장 -  SAVE QUERY */ 
	/********************************************************************/
	DECLARE @STATION_CODE                   INT                  = N'{0}'
			  , @STATION_NAME                   NVARCHAR(200)        = N'{1}'
			  , @CATEGORY_CODE                  INT                  = CONVERT(INT, CASE WHEN ISNUMERIC('{2}') = 1 THEN '{2}' ELSE NULL END )
			  , @ADDRESS1                       NVARCHAR(200)        = N'{3}'
			  , @ADDRESS2                       NVARCHAR(200)        = N'{4}'
			  , @ZIP_CODE                       VARCHAR(10)          = N'{5}'
			  , @LATITUDE                       NUMERIC(20,16)       = CONVERT(NUMERIC(20,16), CASE WHEN ISNUMERIC('{6}') = 1 THEN '{6}' ELSE NULL END )
			  , @LONGITUDE                     NUMERIC(20,16)       = CONVERT(NUMERIC(20,16), CASE WHEN ISNUMERIC('{7}') = 1 THEN '{7}' ELSE NULL END )
			  , @STATION_DESC                   NVARCHAR(400)        = N'{8}'
			  , @REAMRK                         NVARCHAR(200)        = N'{9}'
			  , @HIDE                           BIT                  = CONVERT(BIT, CASE WHEN ISNUMERIC('{10}') = 1 THEN '{10}' ELSE '0' END )
			  , @INSERT_CODE                    INT                  = {11}
			  , @INSERT_DATE                    DATETIME             = GETDATE() 
			  , @UPDATE_CODE                    INT                  = {11}
			  , @UPDATE_DATE                    DATETIME             = GETDATE() 
        , @LOGO_URL                       NVARCHAR(200)        = '{12}'

	UPDATE A 
	SET  	  STATION_NAME                   = @STATION_NAME                  
			 ,  CATEGORY_CODE                  = @CATEGORY_CODE                 		 ,  ADDRESS1                       = @ADDRESS1                      
			 ,  ADDRESS2                       = @ADDRESS2                      		 ,  ZIP_CODE                       = @ZIP_CODE                      
			 ,  LATITUDE                       = @LATITUDE                      		 ,  LONGITUDE                     = @LONGITUDE                    
			 ,  STATION_DESC                   = @STATION_DESC                  		 ,  REAMRK                         = @REAMRK                        
			 ,  HIDE                           = @HIDE                          		 ,  UPDATE_CODE                    = @UPDATE_CODE                   
			 ,  UPDATE_DATE                    = @UPDATE_DATE                   
	FROM T_DEVICE_STATION A 
	WHERE STATION_CODE= @STATION_CODE
	IF @@ROWCOUNT = 0
	BEGIN
		INSERT INTO T_DEVICE_STATION
		(		STATION_NAME                  		, CATEGORY_CODE                 		, ADDRESS1                      		
			, ADDRESS2                      		, ZIP_CODE                      		, LATITUDE                      		, LONGITUDE                    		
			, STATION_DESC                  		, REAMRK                        		, HIDE                          		, INSERT_CODE                   		
			, INSERT_DATE                   		, UPDATE_CODE                   		, UPDATE_DATE                   		
		)
		SELECT @STATION_NAME                 		, @CATEGORY_CODE                	
				, @ADDRESS1                     		, @ADDRESS2                     		, @ZIP_CODE                     	
				, @LATITUDE                     		, @LONGITUDE                   		, @STATION_DESC                 	
				, @REAMRK                       		, @HIDE                         		, @INSERT_CODE                  	
				, @INSERT_DATE                  		, @UPDATE_CODE                  		, @UPDATE_DATE                  	
			
      SELECT @STATION_CODE = CONVERT(INT, IDENT_CURRENT( 'T_DEVICE_STATION' ))
      
	 END
    DELETE FROM T_FILE
           WHERE TABLE_NAME = 'T_DEVICE_STATION' 
             AND TABLE_KEY  = CONVERT(VARCHAR(20), @STATION_CODE)
             AND FILE_SEQ   = 1
             AND REF_DATA1 = '1'
       IF @LOGO_URL <> '' 
       BEGIN
          /*REF_DATA1가 1이면 로고*/
          INSERT INTO T_FILE
          (TABLE_NAME, TABLE_KEY, FILE_SEQ, FILE_TYPE, FILE_NAME, FILE_EXT, FILE_URL, REF_DATA1, REF_DATA2, INSERT_CODE, INSERT_DATE)
          SELECT 'T_DEVICE_STATION', CONVERT(VARCHAR(20), @STATION_CODE), 1 AS FILE_SEQ, 1 AS FILE_TYPE, '','', @LOGO_URL, '1',N'스테이션 로고', @UPDATE_CODE, GETDATE()
       END
   SELECT CONVERT(VARCHAR(30), @STATION_CODE) AS DATA
  SET NOCOUNT OFF

      ]]>
      </FixedSQL>
    </TemplateSQL>
  </DBAgentTemplate>
  <DBAgentTemplate TemplateID="DeviceStationDelete">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>기기 스테이션 저장</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2017-11-23</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
    SET NOCOUNT ON 
    /**************************************************************/
    /* 박스 스테이션(위치가 없는 로컬박스의 묶음 - 관리자가 생성가능) */
    /* - T_DEVICE_STATION 저장 -  Delete QUERY                    */ 
    /**************************************************************/
    DECLARE @STATION_CODE  INT            = N'{0}'
	      , @UPDATE_CODE   INT            = {1}
		  , @MESSAGE       NVARCHAR(200)  = ''
        
    IF EXISTS (SELECT * FROM T_DEVICE WHERE STATION_CODE = @STATION_CODE)        
    BEGIN
        SET @MESSAGE = N'이미 저장된 데이터가 있어 데이터를 삭제할 수 없어 숨김 처리 하였습니다.'
    UPDATE T_DEVICE_STATION
        SET HIDE = 1
        WHERE STATION_CODE = @STATION_CODE 
    END
    ELSE
    BEGIN
	    DELETE FROM T_DEVICE_STATION
	     WHERE STATION_CODE = @STATION_CODE 
    END 
   
    SELECT CONVERT(VARCHAR(30), @STATION_CODE) AS DATA, @MESSAGE AS MESSAGE
    SET NOCOUNT OFF
      ]]>
      </FixedSQL>
    </TemplateSQL>
  </DBAgentTemplate>

  <DBAgentTemplate TemplateID="deviceStationCodeUpdate">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>기기별 스테이션코드 업데이트</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2017-11-29</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
 
	SET NOCOUNT ON 
	/************************************************************/
	/* 로컬박스에 스테이션코드 업데이트 deviceStationCodeUpdate */ 
	/************************************************************/
  DECLARE @STATION_CODE INT = CASE WHEN ISNUMERIC('{1}') = 1 THEN '{1}' ELSE NULL END
         ,@UPDATE_CODE  INT = {2}
  UPDATE T_DEVICE
  SET STATION_CODE = @STATION_CODE
    , UPDATE_CODE  = @UPDATE_CODE
    , UPDATE_DATE  = GETDATE()
  WHERE DEVICE_CODE IN ({0})
  SELECT '' AS DATA
  SET NOCOUNT OFF

      ]]>
      </FixedSQL>
    </TemplateSQL>
  </DBAgentTemplate>
</DBAgentMultiTemplate>