<?xml version="1.0" encoding="utf-8" ?>
<DBAgentMultiTemplate  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://altsoft.kr/">

  <DBAgentTemplate TemplateID="GetSaleItemAddList">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>품목추가정보(세트,토핑등) 조회</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2016-06-20</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
        
	SET NOCOUNT ON 
	/*******************************************************************/
	/* 품목추가정보(세트,토핑등) - T_SALE_ITEM_ADD 조회 -  SELECT QUERY */ 
	/*******************************************************************/
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
	SELECT 
		  SALE_CODE
		, A.ITEM_SEQ
		, A.SEQ
		, A.ITEM_TYPE
		, A.ITEM_CODE
		, A.COST
		, A.CNT
		, A.TOT_TAX
		, A.TAX1
		, A.TAX2
		, A.TAX3
		, A.PRICE
		, A.REMARK
		, A.INSERT_CODE
		, A.INSERT_DATE
		, A.UPDATE_CODE
		, A.UPDATE_DATE
	FROM T_SALE_ITEM_ADD A 
  WHERE 1=1 
      #[SALE_CODE]
      #[ITEM_SEQ]
      #[SEQ]
  ORDER BY A.SALE_CODE
	SET NOCOUNT OFF 

      ]]>
      </FixedSQL>
      <DynamicBodys>
        <Key>SALE_CODE</Key>
        <Body>AND A.SALE_CODE = {0} </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>ITEM_SEQ</Key>
        <Body>AND A.ITEM_SEQ = {0} </Body>
      </DynamicBodys>
      <DynamicBodys>
        <Key>SEQ</Key>
        <Body>AND A.SEQ = {0} </Body>
      </DynamicBodys>
    </TemplateSQL>
  </DBAgentTemplate>


  <DBAgentTemplate TemplateID="SaleItemAddSave">
    <!-- 
    SqlType : SQL의 형태를 지정합니다.
      Example 1:<SqlType>FixedSQL</SqlType> 고정적인 SQL을 지원합니다. 
      Example 2:<SqlType>DynamicSQL</SqlType> 동적인 SQL Type1을 지원합니다.  
    Description : 해당 SQL의 기능설명을 적습니다.
    SQLModifier : 해당 SQL의 작성자(수정자)를 적습니다
    LastModifyDate : 해당 SQL의 마지막 수정일을 적습니다
    -->
    <Information>
      <SqlType>DynamicSQL</SqlType>
      <Description>품목추가정보(세트,토핑등) 저장</Description>
      <SQLModifier>전상훈</SQLModifier>
      <LastModifyDate>2016-06-20</LastModifyDate>
    </Information>

    <TemplateSQL>
      <!-- FixedSQL : 고정된 SQL이 들어가는 곳입니다. -->
      <FixedSQL>
        <![CDATA[ 
	SET NOCOUNT ON 
	/******************************************************************/
	/* 품목추가정보(세트,토핑등) - T_SALE_ITEM_ADD 저장 -  SAVE QUERY */ 
	/******************************************************************/
	DECLARE @SALE_CODE            BIGINT               = N'{0}'
			  , @ITEM_SEQ             INT                  = N'{1}'
			  , @SEQ                  INT                  = N'{2}'
			  , @ITEM_TYPE            INT                  = CONVERT(INT, CASE WHEN ISNUMERIC('{3}') = 1 THEN '{3}' ELSE '0' END )
			  , @ITEM_CODE            BIGINT               = CONVERT(BIGINT, CASE WHEN ISNUMERIC('{4}') = 1 THEN '{4}' ELSE '0' END )
			  , @COST                 NUMERIC(30,6)        = CONVERT(NUMERIC(30,6), CASE WHEN ISNUMERIC('{5}') = 1 THEN '{5}' ELSE '0' END )
			  , @CNT                  NUMERIC(30,0)        = CONVERT(NUMERIC(30,0), CASE WHEN ISNUMERIC('{6}') = 1 THEN '{6}' ELSE '0' END )
			  , @TOT_TAX              NUMERIC(30,6)        = CONVERT(NUMERIC(30,6), CASE WHEN ISNUMERIC('{7}') = 1 THEN '{7}' ELSE '0' END )
			  , @TAX1                 NUMERIC(30,6)        = CONVERT(NUMERIC(30,6), CASE WHEN ISNUMERIC('{8}') = 1 THEN '{8}' ELSE '0' END )
			  , @TAX2                 NUMERIC(30,6)        = CONVERT(NUMERIC(30,6), CASE WHEN ISNUMERIC('{9}') = 1 THEN '{9}' ELSE '0' END )
			  , @TAX3                 NUMERIC(30,6)        = CONVERT(NUMERIC(30,6), CASE WHEN ISNUMERIC('{10}') = 1 THEN '{10}' ELSE '0' END )
			  , @PRICE                NUMERIC(30,6)        = CONVERT(NUMERIC(30,6), CASE WHEN ISNUMERIC('{11}') = 1 THEN '{11}' ELSE '0' END )
			  , @REMARK               NVARCHAR(200)        = N'{12}'
			  , @INSERT_CODE          INT                  = {13}
			  , @INSERT_DATE          DATETIME             = GETDATE() 
			  , @UPDATE_CODE          INT                  = {13}
			  , @UPDATE_DATE          DATETIME             = GETDATE() 

	UPDATE A 
	SET  	  ITEM_TYPE                 = @ITEM_TYPE                
			 ,  ITEM_CODE                 = @ITEM_CODE                		 ,  COST                      = @COST                     
			 ,  CNT                       = @CNT                      		 ,  TOT_TAX                   = @TOT_TAX                  
			 ,  TAX1                      = @TAX1                     		 ,  TAX2                      = @TAX2                     
			 ,  TAX3                      = @TAX3                     		 ,  PRICE                     = @PRICE                    
			 ,  REMARK                    = @REMARK                   		 ,  UPDATE_CODE               = @UPDATE_CODE              
			 ,  UPDATE_DATE               = @UPDATE_DATE              
	FROM T_SALE_ITEM_ADD A 
	WHERE SALE_CODE= @SALE_CODE	  AND ITEM_SEQ= @ITEM_SEQ	  AND SEQ= @SEQ
	IF @@ROWCOUNT = 0
	BEGIN
  
       SELECT @SEQ = ISNULL(MAX(SEQ),0) + 1 FROM T_SALE_ITEM_ADD
        WHERE SALE_CODE = @SALE_CODE
          AND ITEM_SEQ = @ITEM_SEQ
          
		INSERT INTO T_SALE_ITEM_ADD
		(		SALE_CODE           		, ITEM_SEQ            		, SEQ                 		, ITEM_TYPE           		
			, ITEM_CODE           		, COST                		, CNT                 		, TOT_TAX             		
			, TAX1                		, TAX2                		, TAX3                		, PRICE               		
			, REMARK              		, INSERT_CODE         		, INSERT_DATE         		, UPDATE_CODE         		
			, UPDATE_DATE         		
		)
		SELECT @SALE_CODE          		, @ITEM_SEQ           		, @SEQ                	
				, @ITEM_TYPE          		, @ITEM_CODE          		, @COST               	
				, @CNT                		, @TOT_TAX            		, @TAX1               	
				, @TAX2               		, @TAX3               		, @PRICE              	
				, @REMARK             		, @INSERT_CODE        		, @INSERT_DATE        	
				, @UPDATE_CODE        		, @UPDATE_DATE        	
	 END
SET NOCOUNT OFF

      ]]>
      </FixedSQL>
    </TemplateSQL>
  </DBAgentTemplate>
</DBAgentMultiTemplate>