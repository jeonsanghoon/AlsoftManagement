<?xml version="1.0" encoding="utf-8" ?>
<!--
http://blog.naver.com/PostView.nhn?blogId=hiizero&logNo=20166466346
%c
로그출력이 된 logger명을 출력
%C
Class를 출력
%d
일시를 출력. 「%d{yyyy/mm/dd HH:mm:ss}」와 같은 상세설정도 가능
%F
파일명을 출력
%l
소스명이나행과 같은 호출한 위치를 출력
%L
행번호를 출력
%m
메시지를 출력
%M
메서드명을 출력
%n
개행문자를 출력
%p
로그의 레벨（Fatal/Error등）을 출력
%t
로그를 생성한 쓰레드를 출력
%x
쓰레드의 NDC(네스트화 진단 컨텍스트)를 출력.쓰레드고유의 정보(session ID등)을 밀어넣는것이 가능
단, %C、%F、%l、%L、%M 의 경우는 처리부하가 높아지기 때문에 필요할 때 이외는 사용하지 않도록 주의가 필요.
또한, Layout에는 SimpleLayout,XmlLayout등의 몇 개의 종류가 있기는 하지만, 대부분의 경우,로그 정리가 간단한 PatternLayout을 사용한다.
-->
<configuration>
  <log4net>
    <appender name="Console" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <!-- Pattern to output the caller's file name and line number -->
        <conversionPattern value="%d [%t] %-5p %c - %m%n" />
      </layout>
    </appender>

    <!-- 날짜별 로그 파일 생성 -->
    <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
      <file value="./log/" />
      <!--<rollingStyle value="Date" />-->
      <datePattern value="yyyy-MM-dd.'log'" />
      <appendToFile value="true" />
      <staticLogFileName value="false" />
      <maximumFileSize value="10MB" />
      <maxSizeRollBackups value="1000" />
      <encoding value="utf-8" />
      <layout type="log4net.Layout.PatternLayout">
        <!-- %d [%t] %-5p %c %C %M - %m%n -->
        <conversionpattern value="%d [%5t] %-5p %c - %m%n">
        </conversionpattern>
      </layout>
    </appender>
    <root>
      <!-- 로그수준 level : ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF-->
      <level value="ALL" />
      <appender-ref ref="RollingFile" />
    </root>
    <logger name="로그네임">
      <level value="ALL"/>
      <appender-ref ref="Console" />
    </logger>
  </log4net>
</configuration>
