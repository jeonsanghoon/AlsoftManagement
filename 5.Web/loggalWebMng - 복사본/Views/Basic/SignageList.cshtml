@{

    T_STORE data = (T_STORE)ViewBag.data;

}
@section scripts{
    <style>
        .dvSearchArea {
            overflow: overlay;
        }

        .dvSearchArea .dvSearchSet .ui.input {
            min-height: 25px;
            min-width: 130px;
            margin-bottom: 0px;
            font-size: 1.03rem;
        }
    </style>
    <script type="text/javascript">

        $(document).ready(function () {


            $("#frmSearch").submit(function (event) {
                _page = 1;
                doQuery();
                
                event.preventDefault();
            });
            ComponentInit();
            doQuery();
            
         

            $("#btnClear").click(function () {
                $("#frmSearch input[type=text]").val("");
            });

            $("#btnAdd").click(function () {
                location.href = "/basic/signagereg";
            });

        }); //End document.ready

       
        var PARAM_DATA = {
            PAGE_SIZE: ($("window").width() < 768 ? 5 : 10)
            , PAGE_COUNT: 10
            , PAGE: 1
            , SORT: "A.UPDATE_DATE DESC"
        }
        function ComponentInit() {
         
        }   //End ComponentInit

        function doQuery(page, order) {//, sortCol, sortOrd
            
            if (page == undefined || page == null || page < 1) page = 1;
            PARAM_DATA.PAGE = page;

            var param = BaseCommon.FormInfo.serializeJson(".ui.form");

            param.PAGE_COUNT = PARAM_DATA.PAGE_COUNT;
            param.PAGE = PARAM_DATA.PAGE;
            param.IS_REPRESENT = 1;
            if (order != undefined) {
                PARAM_DATA.SORT = order;
                param.SORT = order;
            }
            else if (order == undefined) {
                param.SORT = PARAM_DATA.SORT;
            }
            
            ajax.GetAjax("/Basic/pv_SignageList", JSON.stringify(param), "html", function (result) {

                $("#pvSignageList table tbody").html(result);
                $.mrc_table.Init("#pvSignageList .mrc-table", false, order);

                $("#pagination").pagination({
                    total: Number($("#pvSignageList #total").val()), page: PARAM_DATA.PAGE, pagesize: PARAM_DATA.PAGE_SIZE, perpage: PARAM_DATA.PAGE_COUNT
                    , onPageClick: function (item, page) {
                        doQuery(page);
                    }
                });



            });
            doQuerySub(0, 1);
        }   //End doQuery

        function mrc_table_trClick(objName, param) {
            if (objName == "#pvSignageList .mrc-table") {
                //$(".subSignage").show();
                doQuerySub(param.SIGN_CODE, 1);
            }
        }

        function mrcGrid_Sort(objName, datasort, orderType) {
            if (datasort == "" || orderType == "") doQuery(1, "");
            else doQuery(1, datasort + " " + orderType);
        }

      
        function ExcelDown() {
            var params = BaseCommon.FormInfo.serializeJson(".ui.form");
            var arrData = new Array();
            $.each(params, function (key, val) {
                //display the key and value pair

                arrData.push({ name: key, value: val });
            });
            BaseCommon.FormInfo.PostSubmit('/basic/SignageExcelReport', arrData);
        }

        function subSignageReg(signCode, signName) {
            var arrData = new Array();
            arrData.push({ name: "REPRE_SIGN_CODE", value: signCode});
            
            BaseCommon.FormInfo.PostSubmit('/basic/signagereg',  arrData);
        }

        function signageSubCopySave(signCode) {
            $.MessageBox({
                buttonDone: "복사",
                buttonFail: "취소",
                message: "복사를 클릭하시면 "
            }).done(function () {
                signageSubCopySave_exec(signCode);
            }).fail(function () {
                
            });
        }

        function signageSubCopySave_exec(signCode) {
            var param = new Object();
            param.REPRE_SIGN_CODE = signCode;
            param = JSON.stringify(param);
            ajax.GetAjax("/basic/SignageSubCopySave/", param, "json", function (result) {
                if (result.ERROR_MESSAGE != "") {
                    $.MessageBox(result.ERROR_MESSAGE);
                } else {

                    // Confirm
                    $.MessageBox({
                        buttonDone: "예",
                        buttonFail: "아니오",
                        message: "등록된 정보를 보시겠습니까?"
                    }).done(function () {
                        location.href = "/basic/signagereg/" + result.DATA;
                    }).fail(function () {
                        doQuery();
                    });
                }
            });
        }
        var PARAM_DATA2 = {
            PAGE_SIZE: 10
            , PAGE_COUNT: 10
            , PAGE: 1
            , SORT: "A.SIGN_CODE"
            , SIGN_CODE :0
        }
        function doQuerySub(signCode, page) {
            $("#paginationSub").show();
            if (page == undefined || page == null || page < 1) page = 1;
            PARAM_DATA2.PAGE = page;
            PARAM_DATA2.SIGN_CODE = signCode;
            var param = new Object();
            param.REPRE_SIGN_CODE = PARAM_DATA2.SIGN_CODE;

            param.PAGE_COUNT = PARAM_DATA2.PAGE_COUNT;
            param.PAGE = 1;
            param.IS_REPRESENT = false;
            param.SORT = PARAM_DATA2.SORT;
            

            ajax.GetAjax("/Basic/pv_SignageList", JSON.stringify(param), "html", function (result) {

                $("#pvSignageSubList table tbody").html(result);
                $.mrc_table.Init("#pvSignageSubList .mrc-table", false);

                $("#paginationSub").pagination({
                    total: Number($("#pvSignageSubList #total").val()), page: PARAM_DATA2.PAGE, pagesize: PARAM_DATA2.PAGE_SIZE, perpage: PARAM_DATA2.PAGE_COUNT
                    , onPageClick: function (item, page) {
                        doQuerySub(PARAM_DATA2.SIGN_CODE, page);
                    }
                });
            });
        }
    </script>
}
@{ Html.RenderPartial("/Views/Basic/Partial/PV_AuthNumberApply.cshtml");}
<div class="ui vertical stripe segment">
        @Html.TitleNavigation()
    <form class="ui form search" id="frmSearch" onSubmit="return false;">


        <div class="ui grid search " style="height:100%;">

            <div class="eight wide mobile four wide tablet three wide computer column">
                @Html.Semantic_TextBox("SIGN_NAME", "", SemanticUIHelper.Size.mini, new { @placeholder = "사이니지명을 입력하세요" })
            </div>
            <div class="eight wide mobile four wide tablet three wide computer column">@Html.CommonCombo("AUTH_YN", new T_COMMON_COND { MAIN_CODE = "B003" }, "", "-인증여부-", new { @class = "size180" })</div>
            <div class="sixteen wide mobile eight wide tablet ten wide computer column button">
                @{
                    Daum_MapMultiMarker optionmap = new Daum_MapMultiMarker() { ID = "signage", bReadOnly = true, MAKER_MAX_COUNT = SessionHelper.LoginInfo.EMPLOYEE.MAKER_MAX_COUNT, bCircle = false };
                    @Html.EditorFor(model => new EditTempleateModel().Kakao_MapMakerCircle, new { optionmap = optionmap })
                }
                @Html.Semantic_Button2("btnOpen", "지도보기", SemanticUIHelper.enButtonType.Normal, new { @onclick = "markerMapPopupOpen();" })

                <script>
                    function markerMapPopupOpen() {
                        var params = BaseCommon.FormInfo.serializeJson(".ui.form");

                        params.PAGE_COUNT = 100000;
                        params.IS_REPRESENT = 1;
                        params = JSON.stringify(params);
                        ajax.GetAjax("/basic/GetSignageMapList", params, "json", function (result) {
                            
                            //@(optionmap.ID)_DaumMapMaker_Open(result, 0, 0, "", 1,true);
                            @(optionmap.ID)_MapOpen(result);

                        });

                    }
                </script>
                @Html.Semantic_Button2("btnSearch", "조회", SemanticUIHelper.enButtonType.ToList, SemanticUIHelper.Size.mini, new { @onclick = "doQuery();", @class = "right floated " })
                @Html.Semantic_Button2("btnExcel", "엑셀", SemanticUIHelper.enButtonType.Excel, SemanticUIHelper.Size.medium, new { @onclick = "ExcelDown();" })
                @Html.Semantic_Button2("btnAdd", "신규", SemanticUIHelper.enButtonType.New, SemanticUIHelper.Size.mini, new { @class = "right floated " })
            </div>
        </div>
        <div class="ui grid " style="height:100%;">
            <div class="one column row">
                <div class="column" id="pvSignageList">
                    <table class="mrc-table search" id="tblist">
                        <thead>
                            <tr>

                                <th class="sort" column_name="SIGN_NAME" data-sort="A.SIGN_NAME">사이니지</th>

                                <th class="hide" column_name="SIGN_CODE" data-sort="A.SIGN_CODE" style="width:50px;">코드</th>
                                <th display_size="tablet" class="sort" data-sort="IS_VERTICAL_NAME">디스프레이</th>
                                <th display_size="tablet" class="sort hide" data-sort="A.PLAY_TIME">플레이시간</th>
                                <th column_name="ADDRESS" data-sort="ADDRESS1, ADDRESS2" display_size="pc" class="sort">주소</th>
                                <th column_name="ZIP_CODE" display_size="detail" class="sort">우편번호</th>
                                <th column_name="LATITUDE" display_size="detail" class="sort">위도</th>
                                <th column_name="LONGITUDE" display_size="detail" class="sort">경도</th>
                                <th column_name="AUTH_NUMBER" display_size="pc" class="sort">인증</th>
                                <th column_name="AD_SIGNINFO_CNT" display_size="pc" class="sort" data-sort="AD_SIGNINFO_CNT">배너수</th>
                                <th display_size="pc" class="sort">서브등록</th>
                                <th column_name="SUB_SIGN_CNT" display_size="pc" data-sort="SUB_SIGN_CNT">서브갯수</th>
                                <th class="sort" column_name="UPDATE_NAME" data-sort="UPDATE_NAME">수정자</th>
                                <th column_name="MEMBER_NAME" data-sort="UPDATE_DATE" display_size="pc">수정시간</th>
                                <th display_size="pc">제어등록</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="one column row">
                <div id="pagination" class="ui pagination menu"></div>
            </div>
        </div>

        <div class="ui top attached tabular menu subSignage">
            <a class="item first-tab active" data-tab="first">서브사이니지</a>
        </div>
        <div class="ui bottom attached tab first-tab segment active subSignage" data-tab="first" >
            <div class="ui grid " style="height:100%;">
                <div class="one column row">
                    <div class="column" id="pvSignageSubList">
                        <table class="mrc-table search" id="tbSublist">
                            <thead>
                                <tr>

                                    <th column_name="SIGN_NAME" data-sort="A.SIGN_NAME">사이니지</th>
                                    <th class="hide" column_name="SIGN_CODE" data-sort="A.SIGN_CODE" style="width:50px;">코드</th>
                                    <th display_size="tablet" data-sort="IS_VERTICAL_NAME">디스프레이</th>
                                    <th display_size="tablet" data-sort="A.PLAY_TIME" class="hide">플레이시간</th>
                                    <th column_name="ADDRESS" data-sort="ADDRESS1, ADDRESS2" display_size="pc">주소</th>
                                    <th column_name="ZIP_CODE" display_size="detail">우편번호</th>
                                    <th column_name="LATITUDE" display_size="detail">위도</th>
                                    <th column_name="LONGITUDE" display_size="detail">경도</th>
                                    <th column_name="AUTH_NUMBER" display_size="pc">인증</th>
                                    <th column_name="AD_SIGNINFO_CNT" display_size="pc" data-sort="AD_SIGNINFO_CNT">배너수</th>
                                    <th column_name="UPDATE_NAME" data-sort="UPDATE_NAME">수정자</th>
                                    <th column_name="MEMBER_NAME" data-sort="UPDATE_DATE" display_size="pc">수정시간</th>
                                    <th display_size="pc">제어등록</th>
                                </tr>

                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
                <div class="one column row">
                    <div id="paginationSub" class="ui pagination menu"></div>
                </div>
            </div>
        </div>
        <div class="ui grid">
            <div class="ui accordion field">
                <div class="title">
                    <i class="icon dropdown"></i>
                    화면설명
                </div>
                <div class="content field">
                    <div class="ui segment field" style="margin-bottom:3em;position:absolute">
                        <ul class="ui list">
                            <li>상단리스트 클릭시 서브 사이니지가 조회된다</li>

                            @*<li>
                                권한
                                <ul>
                                    <li>관리자 : 등록된 모든 데이터</li>

                                    <li>회원 : 자신이 등록한 데이터</li>
                                </ul>
                            </li>*@
                        </ul>
                    </div>
                </div>
            </div>
        </div>


    </form>
</div>



