@{
    TinyMCEOption option = (ViewData["option"] == null) ? new TinyMCEOption() : (TinyMCEOption)ViewData["option"];
}
<script type="text/javascript">
       if (typeof tinymce === 'undefined') {
        document.write('<script src="@Url.Content("~/Common/plugin/js/tinymce/tinymce.min.js")" type="text/javascript"><\/script>');
        
    }
</script>

<script type="text/javascript">
    (function () { tinymce.init({  setup: function (ed) {
        ed.on("change", function (e) {
            try {
                @{
                    if(option.ID == null) {
                        @(ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty) + "_change();")
                    }
                    else
                    {
                        @(option.ID + "_change();")
                    }
                }
            }
            catch (e) { }
        });
        ed.on("keyup", function () {
            try {
                @{
                    if(option.ID == null) {
                        @(ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty) + "_keyup();")
                    }
                    else
                    {
                        @(option.ID + "_change();")
                    }
                }
            }
            catch (e) { }
        });
    }
       ,mode: "exact", language: "@option.LANGUAGE", selector : "#@(option.ID == null ? ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty) : option.ID)", theme: "modern", height: "@(option.ID == null ? "500px" : option.HEIGHT)", width: "@(option.ID == null ? "100%" : option.WIDTH)",  plugins: ["advlist autolink lists link image charmap print preview hr anchor pagebreak", "searchreplace wordcount visualblocks visualchars code fullscreen", "insertdatetime media nonbreaking save table contextmenu directionality", "emoticons template paste textcolor"], toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image", toolbar2: "print preview media | forecolor backcolor emoticons", image_advtab: true, templates: [{ title: 'Test template 1', content: 'Test 1' }, { title: 'Test template 2', content: 'Test 2' }] }); })();
</script>
@{
    if (option.ID == null)
    {
        @Html.TextArea(string.Empty, ViewData.TemplateInfo.FormattedModelValue)
    }
    else
    {
        @Html.TextArea(option.ID, option.CONTENT == null ? string.Empty : option.CONTENT)
    }
}