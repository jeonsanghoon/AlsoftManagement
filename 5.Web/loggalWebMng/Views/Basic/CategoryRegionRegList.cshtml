@using ALT.VO.Common;
@using ALT.BizService;
@{

    int? STORE_CODE = Convert.ToInt32(ViewBag.STORE_CODE);
}
<style>
    .mrc-fixed-table-container.tbl1 {
        height: 180px;
    }

    .mrc-fixed-table-container.tbl2 {
        height: 100%;
    }

    .mrc-fixed-table-container.tbl3 {
        height: auto;
    }

    .mrc-fixed-table-container.tbl2 .table-wrapper {
        height: 180px;
        max-height: 315px;
    }

    .mrc-fixed-table-container.tbl3 .table-wrapper {
        height: 180px;
        max-height: 315px;
    }


    .ui.dropdown .ui.active.label {
        background-color: #f9f29d;
        color: #000;
    }

    .mrc-table tr.TRkeywordActive.mrcrow td {
        background-color: #c6f6f7;
    }

    @@media only screen and (max-width: 1320px) {
        .ui.table:not(.unstackable) {
            width: 100%;
            padding: 0;
        }

        .ui.table tbody.search td.title .ui.header {
            min-width: 80px;
            text-align: right;
            padding-top: 0.5em;
        }

        .ui.table:not(.unstackable) tbody.search {
            width: auto !important;
            display: block !important;
        }

            .ui.table:not(.unstackable) tbody.search tr > td {
                display: flex !important;
            }

            .ui.table:not(.unstackable) tbody.search tr > td {
                background: 0 0;
                border: none !important;
                padding: .25em .75em !important;
                box-shadow: none !important;
                width: auto !important;
            }

            .ui.table:not(.unstackable) tbody.search tr {
                padding-top: 1em;
                padding-bottom: 1em;
                box-shadow: 0 -1px 0 0 rgba(0,0,0,.1) inset !important;
            }

                .ui.table:not(.unstackable) tbody.search, .ui.table:not(.unstackable) tbody.search tr, .ui.table:not(.unstackable) tbody.search tr > td, .ui.table:not(.unstackable) tbody.search tr > th {
                    width: auto !important;
                    display: block !important;
                }

        .ui.table tbody.search td.title {
            text-align: left;
            float: left;
            width: 300px;
        }
    }

    @@media (min-width: 769px) and (max-width: 1320px) {
        .ui.table:not(.unstackable) tbody.search td input {
            width: 10em;
        }
    }

    @@media only screen and (max-width: 768px) {
        .ui.table tbody.search2 .buttons {
            margin-top: -2.5em !important;
            float: right;
        }
    }

    @@media only screen and (max-width: 500px) {
        .ui.table tbody.search input {
            width: 100px;
        }
    }

    @@media only screen and (max-width: 400px) {
        .ui.table tbody.search input {
            width: 80px;
        }

        .ui.table tbody.search td.content button {
            margin-left: -20px;
            float: right;
        }
    }
</style>
@section scripts{

    <script type="text/javascript">
        var _gridType = 1;

        $(document).ready(function () {
            doQuery();
            doQuery2(1, -1);
            ComponentInit();


        }); //End document.ready

        function ComponentInit() {
            $("#CATEGORY_NAME").keypress(function (e) {
                if (e.keyCode == 13) {
                    doQuery(1);
                }
            })
            $("#KEYWORD_NAME").keypress(function (e) {
                if (e.keyCode == 13) {
                    doQuery_KEYWORD(1);
                }
            })
        }
        function SemanticUI_ComboChange(obj) {
            if ($(obj)[0].id == "STORE_CODE") {
                location.href = "/common/groupmemberreg/" + $("#STORE_CODE").val();
            }
        }

        var PARAM_DATA = {
            PAGE_SIZE: ($("window").width() < 768 ? 5 : 10)
          , PAGE_COUNT: 100
          , PAGE: 1
          , TABLE_NAME: "tbl1"
        }

        function doQuery(page) {


            if (page == undefined) PARAM_DATA.PAGE == 1;
            else PARAM_DATA.PAGE = page;
            var param = new Object();
            param.PAGE_COUNT = PARAM_DATA.PAGE_COUNT;

            param.PAGE = PARAM_DATA.PAGE;
            param.CATEGORY_TYPE = "2";
            param.CATEGORY_TYPE2 = "2";
            param.LEVEL_DEPTH = 1;
            param.CATEGORY_NAME = $("#CATEGORY_NAME").val();
            param.TABLE_NAME = PARAM_DATA.TABLE_NAME;
            param = JSON.stringify(param);
            ajax.GetAjax("/basic/pv_CategoryRegList", param, "html", function (result) {

                BaseCommon.SetHtml(document.all.dvTable1, result);
                $.mrc_table.Init("#dvTable1 table.list", true);

                Input.TextBox.onlyNumber("#dvTable1 table.list .number");
                $.mrc_table.fixedHeder("#dvTable1 table.list");
                doQuery_KEYWORD(1)
                $("#dvpagination").pagination({
                    total: Number($("#" + PARAM_DATA.TABLE_NAME + "_TOTAL").val()), page: PARAM_DATA.PAGE, pagesize: PARAM_DATA.PAGE_SIZE, perpage: PARAM_DATA.PAGE_COUNT
                  , onPageClick: function (item, page) {
                      doQuery(page);
                  }
                })
                
            });
        }


        var PARAM_DATA2 = {
            PAGE_SIZE: ($("window").width() < 768 ? 5 : 10)
          , PAGE_COUNT: 100
          , PAGE: 1
          , TABLE_NAME: "tbl2"
          , CATEGORY_CODE: 0
        }
        $.fn.innerHTML = function (html) {
        }


        function doQuery2(page, categoryCode) {
            var param = new Object();
            if (categoryCode == undefined) param.LEVEL_DEPTH = 0;
            else param.LEVEL_DEPTH = 2;
            if (page == undefined) PARAM_DATA2.PAGE == 1;
            else PARAM_DATA2.PAGE = page;

            param.PAGE_COUNT = PARAM_DATA2.PAGE_COUNT;
            if (categoryCode != undefined) PARAM_DATA2.CATEGORY_CODE = categoryCode;

            param.PAGE = PARAM_DATA2.PAGE;
            param.CATEGORY_TYPE = "2";
            param.CATEGORY_TYPE2 = "2";
            param.PARENT_CATEGORY_CODE = PARAM_DATA2.CATEGORY_CODE;
            param.CATEGORY_NAME = $("#CATEGORY_NAME").val();
            param.TABLE_NAME = PARAM_DATA2.TABLE_NAME;
            param = JSON.stringify(param);
            ajax.GetAjax("/basic/pv_CategoryRegList", param, "html", function (result) {
                var dNow = moment(new Date()).format("YYYYMMDDHHmmss") + "." + moment(new Date()).get('millisecond');
                // $("#dvTable2").html(result);
                ////   document.all.dvTable2.innerHTML = result;
                BaseCommon.SetHtml(document.all.dvTable2, result);
                //   console.log("로그 >> " + String(Number(moment(new Date()).format("YYYYMMDDHHmmss") + "." + moment(new Date()).get('millisecond')) - dNow));
                //   console.log("로그 2 >> " + moment(new Date()).format("YYYYMMDDHHmmss"));
                $.mrc_table.Init("#dvTable2 table.list", true);

                Input.TextBox.onlyNumber("#dvTable2 table.list .number");
                $.mrc_table.fixedHeder("#dvTable2 table.list");
                doQuery3(1);
                doQuery_KEYWORD(1)
                if (Number($("#" + PARAM_DATA2.TABLE_NAME + "_TOTAL").val()) > 0) $("#dvpagination2").show();
                else $("#dvpagination2").hide();


                $("#dvpagination2").pagination({
                    total: Number($("#" + PARAM_DATA2.TABLE_NAME + "_TOTAL").val()), page: PARAM_DATA2.PAGE, pagesize: PARAM_DATA2.PAGE_SIZE, perpage: PARAM_DATA2.PAGE_COUNT
                  , onPageClick: function (item, page) {
                      doQuery2(page, PARAM_DATA2.CATEGORY_CODE);
                  }
                })
            });
        }


        var PARAM_DATA3 = {
            PAGE_SIZE: ($("window").width() < 768 ? 5 : 10)
         , PAGE_COUNT: 100
         , PAGE: 1
         , TABLE_NAME: "tbl3"
         , CATEGORY_CODE: 0
        }

        function doQuery3(page, categoryCode) {
            var param = new Object();
            if (categoryCode == undefined) param.LEVEL_DEPTH = 0;
            else param.LEVEL_DEPTH = 3;
            if (categoryCode == undefined) categoryCode = -1;
            if (page == undefined) PARAM_DATA3.PAGE == 1;
            else PARAM_DATA3.PAGE = page;

            param.PAGE_COUNT = PARAM_DATA3.PAGE_COUNT;
            if (categoryCode != undefined) PARAM_DATA3.CATEGORY_CODE = categoryCode;

            param.PAGE = PARAM_DATA3.PAGE;
            param.CATEGORY_TYPE = "2";
            param.CATEGORY_TYPE2 = "2";
            param.PARENT_CATEGORY_CODE = PARAM_DATA3.CATEGORY_CODE;
            param.CATEGORY_NAME = $("#CATEGORY_NAME").val();
            param.TABLE_NAME = PARAM_DATA3.TABLE_NAME;
            param = JSON.stringify(param);
            ajax.GetAjax("/basic/pv_CategoryRegList", param, "html", function (result) {

                BaseCommon.SetHtml(document.all.dvTable3, result);

                $.mrc_table.Init("#dvTable3 table.list", true);

                Input.TextBox.onlyNumber("#dvTable3 table.list .number");
                $.mrc_table.fixedHeder("#dvTable3 table.list");
                doQuery_KEYWORD(1)
                if (Number($("#" + PARAM_DATA3.TABLE_NAME + "_TOTAL").val()) > 0) $("#dvpagination3").show();
                else $("#dvpagination3").hide();


                $("#dvpagination3").pagination({
                    total: Number($("#" + PARAM_DATA3.TABLE_NAME + "_TOTAL").val()), page: PARAM_DATA3.PAGE, pagesize: PARAM_DATA3.PAGE_SIZE, perpage: PARAM_DATA3.PAGE_COUNT
                  , onPageClick: function (item, page) {
                      doQuery2(page, PARAM_DATA3.CATEGORY_CODE);
                  }
                })
            });
        }


        var PARAM_DATA_KEYWORD = {
            PAGE_SIZE: 10
          , PAGE_COUNT: 100
          , PAGE: 1
          , TABLE_NAME: "tbl_KEYWORD"
          , CATEGORY_CODE: 0
        }

        function doQuery_KEYWORD(page, categoryCode) {
            if (page == undefined) PARAM_DATA_KEYWORD.PAGE == 1;
            else PARAM_DATA_KEYWORD.PAGE = page;
            var param = new Object();
            param.PAGE_COUNT = PARAM_DATA_KEYWORD.PAGE_COUNT;
            if (categoryCode != undefined) PARAM_DATA_KEYWORD.CATEGORY_CODE = categoryCode;

            param.PAGE = PARAM_DATA_KEYWORD.PAGE;
            param.CATEGORY_TYPE = "2";
            param.CATEGORY_TYPE2 = "2";
            param.PARENT_CATEGORY_CODE = PARAM_DATA_KEYWORD.CATEGORY_CODE;
            param.CATEGORY_NAME = $("#CATEGORY_NAME").val();
            param.TABLE_NAME = PARAM_DATA_KEYWORD.TABLE_NAME;
            param = JSON.stringify(param);
            ajax.GetAjax("/basic/pv_CategoryRegList", param, "html", function (result) {

                //$("#dvTable3").html(result);
                BaseCommon.SetHtml(document.all.dvTable_KEYWORD, result);

                
                $.mrc_table.Init("#dvTable_KEYWORD table.list", true);

                Input.TextBox.onlyNumber("#dvTable_KEYWORD table.list .number");
                $.mrc_table.fixedHeder("#dvTable_KEYWORD table.list");

                doQuery_KEYWORD(1)
                if (Number($("#" + PARAM_DATA_KEYWORD.TABLE_NAME + "_TOTAL").val()) > 0) $("#dvpagination_KEYWORD").show();
                else $("#dvpagination_KEYWORD").hide();


                $("#dvpagination_KEYWORD").pagination({
                    total: Number($("#" + PARAM_DATA_KEYWORD.TABLE_NAME + "_TOTAL").val()), page: PARAM_DATA_KEYWORD.PAGE, pagesize: PARAM_DATA_KEYWORD.PAGE_SIZE, perpage: PARAM_DATA_KEYWORD.PAGE_COUNT
                  , onPageClick: function (item, page) {
                      doQuery3(page, PARAM_DATA_KEYWORD.CATEGORY_CODE);
                  }
                })
            });
        }


        function mrc_table_trClick(objName, param) {
            if (objName == "#dvTable1 table.list") {
                _gridType = 1;
                doQuery_KEYWORD(1, "A.KEYWORD_NAME");
                PARAM_DATA_KEYWORD.CATEGORY_CODE = 0;
                doQuery2(1, param.CATEGORY_CODE);
                SetCategoryKeyword(param.CATEGORY_CODE, param.CATEGORY_NAME, 1);
                $("#spTitle").text(param.CATEGORY_NAME + " > ");



            }
            else if (objName == "#dvTable2 table.list") {
                _gridType = 2
                var sTitle = param.CATEGORY_NAME;
                var arrData = $.mrc_table.GetActiveRowData("#dvTable1 table");
                if (arrData.length > 0) {
                    sTitle = arrData[0].CATEGORY_NAME + ">" + sTitle;
                }
                SetCategoryKeyword(param.CATEGORY_CODE, sTitle, 2);
                doQuery3(1, param.CATEGORY_CODE);
                doQuery_KEYWORD(1, "A.KEYWORD_NAME");
                $("#spTitle2").text(param.CATEGORY_NAME + " > ");

            }

            else if (objName == "#dvTable3 table.list") {
                _gridType = 3;
                var sTitle = param.CATEGORY_NAME;
                var arrData = $.mrc_table.GetActiveRowData("#dvTable2 table");
                if (arrData.length > 0) {
                    sTitle = arrData[0].CATEGORY_NAME + ">" + sTitle;
                }
                arrData = $.mrc_table.GetActiveRowData("#dvTable1 table");

                if (arrData.length > 0) {
                    sTitle = arrData[0].CATEGORY_NAME + ">" + sTitle;
                }
                SetCategoryKeyword(param.CATEGORY_CODE, sTitle, 3);

                doQuery_KEYWORD(1, "A.KEYWORD_NAME");

            }
        }


        function SetCategoryKeyword(categoryCode, categoryName, levelDepth) {
            var params = new Object();
            var htmlattribute = new Object();
            htmlattribute.class = "mini";

            $("#title_category").html("[<span style='color:blue'>" + categoryName + "</span>] 의 검색어");

            params.name = "CATEGORY_KEYWORD";
            htmlattribute.multiple = "multiple";

            params.CATEGORY_TYPE = "2";
            params.KEYWORD_TYPE = "1";
            params.LEVEL_DEPTH = levelDepth;
            params.CATEGORY_CODE = categoryCode;
            params.HIDE = 0;
            params.htmlAttributes = JSON.stringify(htmlattribute);
            params = JSON.stringify(params);

            ajax.GetAjax("/basic/CategoryKeywordCombo", params, "html", function (result) {

                BaseCommon.SetHtml(document.all.td_CATEGORY_CODE, result);
                $("#td_CATEGORY_CODE").html(result);
                SemanticUI.ComponentInit($("#td_CATEGORY_CODE"));

                $("#CATEGORY_KEYWORD").parent().find(".ui.label").click(function () {
                    var val = $(this).attr("data-value");
                    var text = $(this).text();

                    doQuery_KEYWORD(1, PARAM_DATA_KEYWORD.SORT, val);
                });

            })
        }

        function doAdd(gridType) {
            if (gridType != undefined)_gridType = gridType;

            var parentCategoryCode = 0;
            var orderSeq = 1;
            if (gridType > 1) {
                var arrData = $.mrc_table.GetActiveRowData("#dvTable" + String(gridType - 1) + " table");

                if (arrData.length == 0) {
                    $.MessageBox("상위카테고리(좌측리스트)를 선택하여 주시기 바랍니다.");
                    return;
                }

                if (arrData[0].CATEGORY_CODE <= 0) {
                    $.MessageBox("상위카테고리(좌측리스트) 데이터가 신규이므로 추가를 할수 없습니다. 상위카테고리를 저장한 후 추가하여 주시기 바랍니다.");
                    return;
                }
                parentCategoryCode = arrData[0].CATEGORY_CODE;
                var arrData2 =  $.mrc_table.GetData("#dvTable" + gridType + " table");
                orderSeq = Number(arrData2[arrData.length - 1].ORDER_SEQ) + 1;
            }
          
            var addHtml = '<tr class="new">                                       ';
            addHtml += '      <td ><input type="text" value="" style="width:95%"/></td>                   ';
            addHtml += '      <td class="hide">0</td>													     ';
            addHtml += '      <td class="hide">2</td>													     ';
            addHtml += '      <td class="hide">2</td>												     ';

            addHtml += '      <td class="hide">' + String(parentCategoryCode) + '</td>											     ';
            addHtml += '      <td class="hide center">' + gridType + '</td>													     ';
            addHtml += '      <td class="center"><input type="text"  class="number" maxlength="3"  value="' + String(orderSeq) + '"/></td>						     ';
            addHtml += '      <td class="hide">""/td>											     ';
            addHtml += '      <td class="center"><input type="checkbox" /></td>	     ';

            addHtml += '      <td></td>															     ';
            addHtml += '      <td></td>														     ';
            addHtml += '      <td class="center">@SessionHelper.LoginInfo.MEMBER.USER_NAME</td>													     ';
            addHtml += '      <td class="center">@DateTime.Now</td>													     ';


            addHtml += '</tr>                                                          ';

            gridType = gridType == undefined ? 1 : gridType;

            $.mrc_table.AddRowHtml("#dvTable" + gridType + " table.list", addHtml);

            $.mrc_table.Init("#dvTable" + gridType + " table.list", true, "", "new");

            Input.TextBox.onlyNumber("#dvTable" + gridType + " table.list .number");
            $.mrc_table.fixedHeder("#dvTable" + gridType + " table.list");
            $("#dvTable" + gridType + " .table-wrapper").scrollTop($("#dvTable" + gridType + " .table-wrapper")[0].scrollHeight);


        }



        function doAdd_KEYWORD() {

            var addHtml = "";
            addHtml += '  <tr class="new">       ';
            addHtml += '      <td><input type="text" value=""  /></td>  ';
            addHtml += '      <td class="hide">0</td>    ';
            addHtml += '      <td class="hide">' + String(PARAM_DATA_KEYWORD.KEYWORD_TYPE) + '</td> ';
            addHtml += '      <td class="hide">0</td> ';
            addHtml += '      <td class="hide" ><input type="checkbox" checked /></td> ';
            addHtml += '      <td class="center"></td> ';

            addHtml += '      <td class="hide"><input type="text" value="" /></td> ';
            addHtml += '      <td class="hide"><input type="text" value="" /></td> ';
            addHtml += '      <td>@Html.Raw(Html.CommonCombo("STATUS", new T_COMMON_COND { MAIN_CODE="K001", HIDE=false }, "9", null, new { @class = "size100 field" }).ToHtmlString().Replace("\r\n", "").Trim())</td> ';
            addHtml += '      <td class="center">@SessionHelper.LoginInfo.MEMBER.USER_NAME</td>  ';
            addHtml += '      <td class="center">@DateTime.Now</td> ';
            addHtml += '  </tr> ';

            $.mrc_table.AddRowHtml("#dvTable_KEYWORD table.list", addHtml);

            $.mrc_table.Init("#dvTable_KEYWORD table.list", true, PARAM_DATA_KEYWORD.SORT, "new");

            Input.TextBox.onlyNumber("#dvTable_KEYWORD table.list tr.new .number");
        }

        var PARAM_DATA_KEYWORD = {
            PAGE_SIZE: 5
            , PAGE_COUNT: 5
            , PAGE: 1
            , TABLE_NAME: "tbl2"
            , CATEGORY_CODE: 0
            , SORT: "A.KEYWORD_NAME"
            , KEYWORD_TYPE: 1
        }
        function doQuery_KEYWORD(page, sSort, keywordCode) {

            var arrdata = $.mrc_table.GetActiveRowData("#dvTable" + _gridType + " table");
            if (arrdata.length > 0) {
                PARAM_DATA_KEYWORD.CATEGORY_CODE = arrdata[0].CATEGORY_CODE;
                //$.MessageBox("카테고리(좌측리스트)를 선택하세요");
                //return;
            }
            else {
                PARAM_DATA_KEYWORD.CATEGORY_CODE = -1;
            }
            if (sSort != undefined) PARAM_DATA_KEYWORD.SORT = sSort;
            var param = new Object();


            if (page == undefined) PARAM_DATA_KEYWORD.PAGE = 1;
            else PARAM_DATA_KEYWORD.PAGE = page;
            param.KEYWORD_TYPE = 1;
            param.IS_SYNONYM = false;
            param.KEYWORD_NAME = $("#KEYWORD_NAME").val();
            param.TABLE_NAME = PARAM_DATA_KEYWORD.TABLE_NAME;
            param.CATEGORY_CODE = PARAM_DATA_KEYWORD.CATEGORY_CODE;

            if (keywordCode != undefined) param.KEYWORD_CODE = keywordCode;
            param.PAGE_COUNT = PARAM_DATA_KEYWORD.PAGE_COUNT;
            param.PAGE = PARAM_DATA_KEYWORD.PAGE;
            param.SORT = PARAM_DATA_KEYWORD.SORT;
            param = JSON.stringify(param);
            ajax.GetAjax("/basic/pv_CategoryRegList2", param, "html", function (result) {
                $("#dvTable_KEYWORD table tbody").html(result);
                $.mrc_table.Init("#dvTable_KEYWORD table.list", true, PARAM_DATA_KEYWORD.SORT);
                if (Number($("#" + PARAM_DATA_KEYWORD.TABLE_NAME + "_TOTAL").val()) > 0)
                    $("#dvpagination_KEYWORD").show();
                else
                    $("#dvpagination_KEYWORD").hide();
                $("#dvpagination_KEYWORD").pagination({
                    total: Number($("#" + PARAM_DATA_KEYWORD.TABLE_NAME + "_TOTAL").val()), page: PARAM_DATA_KEYWORD.PAGE, pagesize: PARAM_DATA_KEYWORD.PAGE_SIZE, perpage: PARAM_DATA_KEYWORD.PAGE_COUNT
                  , onPageClick: function (item, page) {
                      doQuery_KEYWORD(page);
                  }
                })
            });
        }

        function doSave(gridType) {
            _gridType = gridType;
            var arrSaveData = $.mrc_table.GetSaveData("#dvTable" + gridType + " table.list");
            var param = JSON.stringify(arrSaveData);
            ajax.GetAjax("/basic/CategorySave", param, "json", function (result) {
                if (result.ERROR_MESSAGE != "") {
                    $.MessageBox(result.ERROR_MESSAGE);
                }
                else {
                    $.MessageBox("저장되었습니다.");
                    //var data1 = $.mrc_table.GetActiveRowData("#dvTable_KEYWORD table.list")[0];
                    if (_gridType == 1) {
                        doQuery(1);
                        doQuery2(1);

                    }
                    else if (_gridType == 2) {
                        doQuery2(1);

                    }
                    doQuery3(1);
                    doQuery_KEYWORD(1);
                    SetCategoryKeyword("-1", "", 1);
                }
            });
        }

        function doDel(gridType) {
            _gridType = gridType;
            var arrDel = $.mrc_table.GetCheckedData("#dvTable" + gridType + " table.list", "D");

            if (arrDel.length == 0) {
                $.MessageBox("삭제할 데이터가 없습니다.");
                return;
            }
            $.MessageBox({
                buttonDone: "예",
                buttonFail: "아니오",
                message: "정말로 삭제하시겠습니까?"
            }).done(function () {
                var param = JSON.stringify(arrDel);
                ajax.GetAjax("/basic/CategorySave", param, "json", function (result) {
                    if (result.ERROR_MESSAGE != "") {
                        $.MessageBox(result.ERROR_MESSAGE);
                    }
                    else {
                        $.MessageBox("삭제되었습니다.");
                        //var data1 = $.mrc_table.GetActiveRowData("#dvTable_KEYWORD table.list")[0];
                        if (_gridType == 1) {
                            doQuery(1);
                        }
                        if (_gridType == 2) {
                            doQuery2(1);
                        }
                        if (_gridType == 3) {
                            doQuery3(1);
                        }
                    }
                });
            });
        }


        function doSave_KEYWORD() {
            var arrSaveData = $.mrc_table.GetSaveData("#dvTable_KEYWORD table.list");
            var param = JSON.stringify(arrSaveData);
            ajax.GetAjax("/basic/KeywordSave", param, "json", function (result) {
                if (result.ERROR_MESSAGE != "") {
                    $.MessageBox(result.ERROR_MESSAGE);
                }
                else {
                    $.MessageBox("저장되었습니다.");
                    //var data1 = $.mrc_table.GetActiveRowData("#dvTable_KEYWORD table.list")[0];
                    doQuery_KEYWORD(1, "A.UPDATE_DATE DESC");
                }
            });
        }

        function doDel_KEYWORD() {
            var arrDel = $.mrc_table.GetCheckedData("#dvTable_KEYWORD table.list", "D");

            if (arrDel.length == 0) {
                $.MessageBox("삭제할 데이터가 없습니다.");
                return;
            }
            $.MessageBox({
                buttonDone: "예",
                buttonFail: "아니오",
                message: "정말로 삭제하시겠습니까?"
            }).done(function () {
                var param = JSON.stringify(arrDel);
                ajax.GetAjax("/basic/KeywordSave", param, "json", function (result) {
                    if (result.ERROR_MESSAGE != "") {
                        $.MessageBox(result.ERROR_MESSAGE);
                    }
                    else {
                        $.MessageBox("삭제되었습니다.");
                        //var data1 = $.mrc_table.GetActiveRowData("#dvTable_KEYWORD table.list")[0];
                        doQuery_KEYWORD(1);
                    }
                });
            });
        }
        function doCategoryKeywordAdd(gridType) {
            if (gridType != undefined)
            _gridType = gridType;
            
            var arrData = $.mrc_table.GetActiveRowData("#dvTable" + _gridType + " table");

            if (arrData.length == 0) {
                $.MessageBox("좌측리스트를 선택하여 주시기 바랍니다.");
                return;
            }
            arrData = $.mrc_table.GetCheckedData("#dvTable_KEYWORD table.list");
            if (arrData.length == "") {
                $.MessageBox("검색어(우측리스트)를 선택하여 주시기바랍니다.");
                return;
            }
            var keyNames = "";
            for (var i = 0; i < arrData.length; i++) {
                if (arrData[i].KEYWORD_CODE <= 0) {
                    if (keyNames != "") keyNames += ", "
                    keyNames += arrData[i].KEYWORD_NAME;

                }
            }
            if (keyNames != "") {
                $.MessageBox("선택된 데이터에 신규데이터가 있습니다. 저장 후 추가하여 주시기 바랍니다.\n신규 검색어명 : " + keyNames);
                return;
            }


            for (var i = 0; i < arrData.length; i++) {
                if (arrData[i].KEYWORD_NAME.length > 0) {
                    SemanticUI.ComboBox.AddItem("#CATEGORY_KEYWORD", arrData[i].KEYWORD_CODE, arrData[i].KEYWORD_NAME, true);
                }
            }


            Input.CheckBox.CheckedAll("chkEditMode", false);

        }
        function doCategoryKeywordSave() {
            var arrdata = $.mrc_table.GetActiveRowData("#dvTable" + _gridType + " table");

            if (arrdata.length == 0) {
                $.MessageBox("카테고리(좌측리스트)를 선택하여 주시기 바랍니다.");
                return;
            }
            var param = new Object();
            param.CATEGORY_CODE = arrdata[0].CATEGORY_CODE;
            param.KEYWORD_CODES = SemanticUI.ComboBox.GetValuesToString("CATEGORY_KEYWORD");
            param = JSON.stringify(param);
            ajax.GetAjax("/basic/CategoryKeywordSave", param, "json", function (result) {
                if (result.ERROR_MESSAGE != "") {
                    $.MessageBox(result.ERROR_MESSAGE);
                }
                else {
                    var arrdata = $.mrc_table.GetActiveRowData("#dvTable" + _gridType + " table.list");
                    
                    mrc_table_trClick("#dvTable" + _gridType + " table.list", arrdata[0]);


                   
                    $.MessageBox("저장되었습니다.");
                    //var data1 = $.mrc_table.GetActiveRowData("#dvTable_KEYWORD table.list")[0];
                    
                }
            });
        }

        function mrcGrid_Sort(gridName, columnName, orderType) {

            if (gridName == "#dvTable_KEYWORD table.list") {
                var sSort = (orderType == undefined || orderType == "") ? "A.KEYWORD_NAME DESC" : columnName + " " + orderType;
                doQuery_KEYWORD(1, sSort);
            }
        }
    </script>
}
<style>
    .ui.checkbox {
        margin-top: 0.5em;
    }

    #dvTable, #dvTable_KEYWORD {
        min-height: 100px;
        width: 100%;
        margin-bottom: 1em;
    }
    /*.ui.grid.firstsearch {
        margin-top: -1.5rem;
        margin-bottom: -0.5rem;
    }*/
</style>
@{Html.RenderPartial("/Views/Basic/Partial/PV_Pop_Synonym.cshtml"); }
<div class="ui vertical stripe segment">
    @Html.TitleNavigation()
    <form class="ui medium  form">
        <div class="ui stackable two column grid" style="margin-top:2em;">
            <div class="column">
                <div class="ui grid">
                    <div class="one column row">
                        <div class="column ">
                            <div class="ui grid search firstsearch">
                                <div class="sixteen wide mobile  sixteen wide tablet eight wide computer lnline column">

                                    @Html.Semantic_TITLE_INLINE("시/도") @Html.Semantic_TextBox("CATEGORY_NAME", "", SemanticUIHelper.Size.mini, new { @class = "size120 size001", @placeholder = "시/도검색" }) @Html.Semantic_Button2("btnSearch", "조회", SemanticUIHelper.enButtonType.ToList, SemanticUIHelper.Size.mini, new { @onclick = "doQuery(1);" })

                                </div>
                                <div class="sixteen wide mobile  sixteen wide tablet eight wide computer column buttons">
                                    @Html.Semantic_Button2("btnClear", "삭제", SemanticUIHelper.enButtonType.Del, SemanticUIHelper.Size.mini, new { onclick = "doDel(1);" })
                                    @Html.Semantic_Button2("btnAdd", "추가", SemanticUIHelper.enButtonType.New, SemanticUIHelper.Size.mini, new { onclick = "doAdd(1);" })
                                    @Html.Semantic_Button2("btnSave", "저장", SemanticUIHelper.enButtonType.Save, SemanticUIHelper.Size.mini, new { onclick = "doSave(1);" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">

                            <div id="dvTable1"></div>
                        </div>
                    </div>
                    <div class="one column row" style="padding-top:0em;padding-bottom:0em; display:none">
                        <div class="column" style="padding-bottom:3em;">
                            <div id="dvpagination" class="ui floated pagination menu" style="margin-top:0.5em;"></div>
                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">
                            <div class="ui grid search" style="margin-top:1em;  margin-bottom:0.1em;">
                                <div class="column">
                                    <div class="inline input">
                                        @Html.Semantic_TITLE_INLINE("spTitle", "시/군/구")
                                        <div style="float:right">
                                            @Html.Semantic_Button2("btnDel2", "삭제", SemanticUIHelper.enButtonType.Del, SemanticUIHelper.Size.mini, new { onclick = "doDel(2);" })
                                            @Html.Semantic_Button2("btnAdd2", "추가", SemanticUIHelper.enButtonType.New, SemanticUIHelper.Size.mini, new { onclick = "doAdd(2);" })
                                            @Html.Semantic_Button2("btnSave2", "저장", SemanticUIHelper.enButtonType.Save, SemanticUIHelper.Size.mini, new { onclick = "doSave(2);" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">

                            <div id="dvTable2"></div>
                        </div>
                    </div>
                    <div class="one column row" style="padding-top:0em;padding-bottom:0em;display:none;">
                        <div class="column">
                            <div id="dvpagination2" class="ui floated pagination menu" style="margin-top:0.5em;"></div>
                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">

                            <div class="ui grid search" style="margin-top:1em;  margin-bottom:0.1em;">
                                <div class="column">
                                    <div class="inline input">
                                        @Html.Semantic_TITLE_INLINE("spTitle2", "읍 /면/동")
                                        <div style="float:right">
                                            @Html.Semantic_Button2("btnDel22", "삭제", SemanticUIHelper.enButtonType.Del, SemanticUIHelper.Size.mini, new { onclick = "doDel(3);" })
                                            @Html.Semantic_Button2("btnAdd_SUB2", "추가", SemanticUIHelper.enButtonType.New, SemanticUIHelper.Size.mini, new { onclick = "doAdd(3);" })
                                            @Html.Semantic_Button2("btnSave_SUB2", "저장", SemanticUIHelper.enButtonType.Save, SemanticUIHelper.Size.mini, new { onclick = "doSave(3);" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">

                            <div id="dvTable3"></div>
                        </div>
                    </div>
                    <div class="one column row" style="padding-top:0em;padding-bottom:0em;display:none;">
                        <div class="column">
                            <div id="dvpagination3" class="ui floated pagination menu" style="margin-top:0.5em;"></div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="column ">
                <div class="ui grid">
                    <div class="one column row">
                        <div class="column">
                            <div class="ui grid search ">
                                <div class="sixteen wide mobile  sixteen wide tablet eight wide computer lnline column">
                                    @Html.Semantic_TITLE_INLINE("검색어명") @Html.Semantic_TextBox("KEYWORD_NAME", "", new { @class = "size120 size001" })&nbsp;@Html.Semantic_Button2("btnSearch", "조회", SemanticUIHelper.enButtonType.ToList, SemanticUIHelper.Size.mini, new { @onclick = "doQuery_KEYWORD(1);" })

                                </div>
                                <div class="sixteen wide mobile  sixteen wide tablet eight wide computer column buttons">
                                    @Html.Semantic_Button2("btnDel2", "삭제", SemanticUIHelper.enButtonType.Del, SemanticUIHelper.Size.mini, new { onclick = "doDel_KEYWORD();" })
                                    @Html.Semantic_Button2("btnAdd2", "추가", SemanticUIHelper.enButtonType.New, SemanticUIHelper.Size.mini, new { onclick = "doAdd_KEYWORD();" })
                                    @Html.Semantic_Button2("btnSave2", "저장", SemanticUIHelper.enButtonType.Save, SemanticUIHelper.Size.mini, new { onclick = "doSave_KEYWORD();" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">
                            <div id="dvTable_KEYWORD">
                                <table class="mrc-table list">
                                    <thead>
                                        <tr>
                                            <th column_name="KEYWORD_NAME" class="sort" data-sort="A.KEYWORD_NAME">검색어명</th>
                                            <th class="hide" column_name="BASE_CODE">코드</th>
                                            <th class="hide" column_name="KEYWORD_TYPE">검색어유형</th>
                                            <th class="hide" column_name="KEYWORD_CODE">검색어코드</th>
                                            <th class="hide" column_name="IS_SYNONYM">동의어여부</th>
                                            <th column_name="SYNONYM_NAMES">동의어</th>

                                            <th column_name="LATITUDE" display_size="detail">위도</th>
                                            <th column_name="LONGITUDE" display_size="detail">경도</th>
                                            <th column_name="STATUS" display_size="detail">상태</th>
                                            <th column_name="UPDATE_NAME" display_size="detail">수정자</th>
                                            <th column_name="UPDATE_DATE" display_size="pc" class="sort" data-sort="A.UPDATE_DATE">수정시간</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="one column row" style="padding-top:0em;padding-bottom:0em;">
                        <div class="column">
                            <div id="dvpagination_KEYWORD" class="ui floated pagination menu" style="display:none;"></div>
                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">
                            <center>
                                <i class="arrow circle down icon teal huge" title="검색어 추가" style="cursor:pointer" onclick="doCategoryKeywordAdd();"></i>
                                @*<i class="fa fa-arrow-circle-down fa-4x " style="cursor:pointer" aria-hidden="false" title="검색어 추가" onclick="doCategoryKeywordAdd();"></i>*@
                            </center>
                        </div>
                    </div>
                    <div class="one column row">
                        <div class="column">

                            <table class="ui  table">
                                <tbody class="search2">
                                    <tr>
                                        <td><h3 id="title_category">검색어</h3></td>
                                        <td class="buttons">@Html.Semantic_Button2("btnSave", "저장", SemanticUIHelper.enButtonType.Save, SemanticUIHelper.Size.mini, new { onclick = "doCategoryKeywordSave();", @style = "float:right" })</td>
                                    </tr>
                                    <tr>
                                        <td id="td_CATEGORY_CODE" colspan="2"><select id="CATEGORY_KEYWORD" multiple="multiple" style="width:100%"></select></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>



