function Grid_SemanticUI_ComboChange(t) { if (null != $(t).closest(".mrc-table")) if ($(t).closest(".mrc_content").length > 0) { var e = $(t).closest(".mrc_content_div").attr("data-index"), i = $(t).closest(".mrc_content").prev().find("td[display_size=detail],td[display_size=pc],td[display_size=tablet]").eq(e).find("input,select"), n = $(t).closest(".ui.dropdown").dropdown("get value"); i.closest("td").find(".ui.dropdown select option").each(function (t) { $.inArray($(this).attr("value"), n) >= 0 ? $(this).attr("selected", "selected") : $(this).removeAttr("selected") }); var a = i.closest("td").find(".ui.dropdown select").outerHTML(); i.closest("td").html(a), SemanticUI.ComponentInit($(t).closest(".mrc_content").prev().find("td[display_size=detail],td[display_size=pc],td[display_size=tablet]").eq(e)) } else { e = $(t).closest("td").attr("data-index"), i = $(t).closest("tr").next().find(".mrc_content_div").eq(e).find("input,select"), n = $(t).closest("td").find(".ui.dropdown").dropdown("get value"); i.closest(".mrc_content_div").find(".ui.dropdown select option").each(function (t) { $.inArray($(this).attr("value"), n) >= 0 ? $(this).attr("selected", "selected") : $(this).removeAttr("selected") }); a = i.closest(".mrc_content_div").find(".ui.dropdown select, .ui input").outerHTML(); i.closest(".mrc_content_div").html(a), SemanticUI.ComponentInit($(t).closest("tr").next().find(".mrc_content_div").eq(e)) } } jQuery.fn.hasHorizontalScrollBar = function () { return !!this.get(0) && this.get(0).scrollWidth > this.innerWidth() }, jQuery.fn.hasVerticalScrollBar = function () { return !!this.get(0) && this.get(0).scrollHeight > this.innerHeight() }, $.mrc_table = { Init: function (t, e, i, n, a, s, r) { if (".mrc-table" == t && (t = ""), "" != t && null != t || (t = ""), e = null != e && e, $(t + ".mrc-table").hasClass("editableGrid") && ($(t + ".mrc-table th.editableCheck").remove(), $(t + ".mrc-table").removeClass("editableGrid")), null != e && 1 == e && !$(t + ".mrc-table").hasClass("editableGrid")) { $(t + ".mrc-table").addClass("editableGrid"); var l = $(t + ".mrc-table thead tr").length; 1 == l ? $(t + ".mrc-table thead tr").prepend('<th class="editableCheck" column_name="MRC_EDIT_MODE">&nbsp;</th>') : $(t + ".mrc-table thead tr:eq(0)").prepend('<th class="editableCheck" column_name="MRC_EDIT_MODE" rowspan=' + String(l) + ">chk&nbsp;</th>"), $(t + ".mrc-table tbody tr").each(function (t) { 0 == $(this).find(".editableCheck").length && ($(this).prepend('<td class="editableCheck"><input type="checkbox" name="chkEditMode" class="chkEditMode ui checkbox" /><span class="editMode">'), $(this).hasClass("new") && $(this).find(".editableCheck input").prepend("N"), $(this).prepend("</span ></td > ")) }) } $(t + " th.sort").each(function (t) { if (0 == $(this).find("i.sort").length) $(this).append("&nbsp;<i class='fa fa-sort sort' style='cursor:pointer'></i>"), $(this).closest("th").css("cursor", "pointer"); else { var e = null != i && "" != i && e; 0 == e && ($(this).find("i.sort").removeClass("fa-sort").removeClass("fa-sort-down").removeClass("fa-sort-up"), $(this).find("i.sort").addClass("fa-sort")) } }), $(t + ".mrc-table tbody tr").addClass("mrcrow"), $(t + ".mrc-table tbody tr td:nth-child(" + (e ? "2" : "1") + ")").css("white-space", "nowrap"), $(t + ".mrc-table tbody tr td:nth-child(" + (e ? "2" : "1") + ")").hasClass("addTD") || $(t + ".mrc-table tbody tr td:nth-child(" + (e ? "2" : "1") + ")").addClass("addTD"), $(t + ".mrc-table tbody tr td:nth-child(" + (e ? "2" : "1") + ")").each(function () { 0 != $(this).find(".fa-plus-circle").length && null != $(this).find(".fa-plus-circle") || $(this).prepend('<i name="btnExpend" class="fa fa-plus-circle" aria-hidden="true"></i>') }), $(t + ".mrc-table tr:nth-child(even) td").addClass("even"), $(t + ".mrc-table tr:nth-child(odd) td").addClass("odd"), $.mrc_table.trTageEventInit(t, e), $.mrc_table.ExpandEventInit(t), $(t + ".mrc-table tbody tr").click(function (e) { t.indexOf(" .new") >= 0 && (t = t.replace(".new", "")), t = t.trim(), $(t + ".mrc-table tbody tr").removeClass("active"), $(t + ".mrc-table tbody td").removeClass("active"), $(this).addClass("active"); try { for (var i = new Object, n = $.mrc_table.columnInfo(t), a = $(this), s = 0; s < n.length; s++)i[n[s].COLUMN_NAME] = $.mrc_table.GetDataInTD(a.find("td:eq(" + s + ")")); mrc_table_trClick(t, i); try { var r = BaseCommon.StringInfo.replaceAll(t, "#", ""); r = BaseCommon.StringInfo.replaceAll(r, " ", ""), r = BaseCommon.StringInfo.replaceAll(r, ".", ""), window["mrc_table_trClick_" + r].apply(null, [t, i]) } catch (t) { } } catch (t) { } }), $(t + ".mrc-table tbody tr td").click(function (e) { t.indexOf(" .new") >= 0 && (t = t.replace(".new", "")), t = t.trim(), $(t + ".mrc-table tbody tr").removeClass("active"), $(this).addClass("active"), $(this).closest("tr").addClass("active"); try { for (var i = new Object, n = $.mrc_table.columnInfo(t), a = $(this), s = 0; s < n.length; s++)i[n[s].COLUMN_NAME] = $.mrc_table.GetDataInTD(a.find("td:eq(" + s + ")")); mrc_table_tdClick(t, i) } catch (t) { } }), $(t + " th.sort").unbind(), $(t + " th.sort").click(function () { var e = ""; $(this).find("i.sort").hasClass("fa-sort") ? e = "DESC" : $(this).find("i.sort").hasClass("fa-sort-down") && (e = "ASC"), $(this).parent().find("th i.sort").removeClass("fa-sort").removeClass("fa-sort-down").removeClass("fa-sort-up"), $(this).parent().find("th i.sort").addClass("fa-sort"); var i = "fa-sort" + ("" == e ? "" : "-" + ("asc" == e.toLowerCase() ? "up" : "down")); $(this).find("i.sort").removeClass("fa-sort"), $(this).find("i.sort").addClass(i); var n = null == $(this).attr("data-sort") ? $(this).attr("column_name") : $(this).attr("data-sort"); try { mrcGrid_Sort(t, n, e) } catch (t) { } try { var a = BaseCommon.StringInfo.replaceAll(t, "#", ""); a = BaseCommon.StringInfo.replaceAll(a, " ", ""), a = BaseCommon.StringInfo.replaceAll(a, ".", ""), window["mrcGrid_Sort_" + a].apply(null, [t, n, e]) } catch (t) { } }), 1 == e && $("#chkAll").click(function () { Input.CheckBox.CheckedAll("chkUse", Input.CheckBox.isChecked($(this).attr("id"))), $(this).closest(".mrc-table").find("tbody .editableCheck").each(function () { $(this).find(".editMode").text("U") }) }), $(t + " th[display_size=detail]").length > 0 && $(t + " tbody tr td i[name=btnExpend]").show(); try { t = "" == t ? ".mrc-table" : t, "" != (n = null == n ? "" : n) ? $(t + " ." + n).length > 1 ? SemanticUI.ComponentInit($(t + " ." + n).eq($(t + " ." + n).length - 1)) : SemanticUI.ComponentInit(t + " ." + n) : SemanticUI.ComponentInit(t) } catch (t) { } if ($(t + ".mrc-table input").focus(function () { $(this).select() }), a && $.getMultiScripts(["/Common/plugin/js/jquery.ui.touch.js", "//code.jquery.com/ui/1.12.0/jquery-ui.min.js"]).done(function () { $(t + " tbody .mrcrow").css("cursor", "move"); try { $(t + " tbody ").sortable("destroy") } catch (t) { } $(t + " tbody ").sortable({ update: function (e, i) { $(t + " tbody").find("tr i[name=btnExpend].fa-minus-circle").addClass("fa-plus-circle"), $(t + " tbody").find("tr i[name=btnExpend].fa-minus-circle").removeClass("fa-minus-circle"), $(t + " tbody").find("tr.mrc_content").hide(); try { r({ objName: t, callbackType: "dragCallback" }) } catch (t) { } } }) }), 0 == $(t + ".mrc-table tbody tr").length) { var d = $(t + ".mrc-table thead th").length; $(t + ".mrc-table tbody").html("<tr class='nodata'><td colspan='" + String(d) + "'>검색된 데이터가 없습니다.</td></tr>") } $(t + ".mrc-table:first thead tr:last th").each(function (t) { var e = new Object; null != $(this).attr("display_size") && ($(this).closest(".mrc-table").find("td:nth-child(" + String(t + 1) + ")").attr("display_size", $(this).attr("display_size")), $(this).closest(".mrc-table").find("td:nth-child(" + String(t + 1) + ")").attr("title", $(this).text()), e.display_size = $(this).attr("display_size")) }), null != s && 1 == s.isActive && ($(t).find("thead tr").length > 1 ? this.fixedHeder2(t, s) : this.fixedHeder(t)), Input.TextBox.onlyNumber(t + " tr .number"), $.mrc_table.gridResize(t), setTimeout($.mrc_table.gridHeaderResize(t), 200) }, InitObject: function (t) { this.Init(t.objName, t.bEdit, t.sort, t.addClass, t.isDrag, t.fixedHeader, t.callback), null != t.isDrop && 1 == t.isDrop && $.getMultiScripts(["/Common/plugin/js/jquery.ui.touch.js", "//code.jquery.com/ui/1.12.0/jquery-ui.min.js"]).done(function () { var e = t.objName; try { $(e).parent().droppable("destroy") } catch (t) { } e = t.objName; $(e).parent().droppable({ activeClass: "active", hoverClass: "hover", tolerance: "touch", drop: function (i, n) { var a = new Object; try { (a = JSON.parse($(n.draggable).find("input").val())).data = a, a.obj = n.draggable, t.callback({ objName: e, callbackType: "dropCallback", draggableObj: a }) } catch (t) { } } }) }) }, SetPageSize: function (t, e, i, n, a, s) { i = null == i ? 60 : i, a = null == a ? ".mrc-table" : a, n = null == n ? $(a + " tr:eq(0)").outerHeight() : n; var r = $(a + " thead").outerHeight(); s = null == s ? ".ui.pagination.menu" : s; var l = ($(window).height() - (r + $(".cd-main-header").outerHeight() + $(".ui.header").outerHeight() + $(e).outerHeight() + $(".ui.footer").outerHeight() + $(s).outerHeight() + n + $(".ui.accordion.field").height()) - i) / n; return t.PAGE_COUNT = Number(Math.floor(l)), $(window).width() < 768 ? t.PAGE_SIZE = 5 : t.PAGE_SIZE = 10, t }, SetPageSizeObject: function (t) { return this.SetPageSize(t.pageParam, t.searchObjName, t.minusHeight, t.rowHeight, t.objName) }, columnInfo: function (t) { var e = new Array; return $(t).find("thead tr:last th").each(function (t) { var i = new Object; i.COLUMN_INDEX = t, i.COLUMN_NAME = null == $(this).attr("column_name") ? "NOT_COLUMN_" + String(t) : $(this).attr("column_name"), i.DISPLAY_SIZE = null == $(this).attr("display_size") ? "ALL" : $(this).attr("display_size"), e[t] = i }), e.length != $(t).find("thead tr:last th").length && alert("column count does not match table th count."), e }, columnIndex: function (t, e) { var i = -1; return $(t).find("thead tr:last th").each(function (t) { if ((null == $(this).attr("column_name") ? "NOT_COLUMN_" + String(t) : $(this).attr("column_name")) == e) return i = t, !1 }), i }, GetCheckedData: function (t, e, i) { var n = new Array; $(t + ".mrc-table td:nth-child(1) input:checked"); return $(t + ".mrc-table td:nth-child(1) input:checked").each(function (a) { null == e && (e = $(this).closest("tr").find("td:eq(0)").find(".editMode").text()); var s = $(this).closest("tr"); if ("N" == e) return $(this).closest("tr").hide(), !0; var r = new Object, l = $.mrc_table.columnInfo(t); s = $(this).closest("tr"); null != e && (r.MRC_EDIT_MODE = e); for (var d = 0; d < l.length; d++)r[l[d].COLUMN_NAME] = $.mrc_table.GetDataInTD(s.find("td:eq(" + d + ")")); null != i && (r.UPDATE_CODE = i), r.MRC_EDIT_MODE = e, n.push(r) }), n }, GetSaveData: function (t) { return $.mrc_table.GetData(t, !0) }, GetSelectRowData: function (t, e) { var i = $.mrc_table.columnInfo(t), n = new Array; if ($(t + " tbody tr.mrcrow eq(" + e + ")").each(function (t) { for (var e = new Object, a = 0; a < i.length; a++)e[i[a].COLUMN_NAME] = $.mrc_table.GetDataInTD($(this).find("td:eq(" + a + ")")); n.push(e) }), 1 == n.length) return n[0]; new Object }, SetFocus: function (t, e, i) { var n = $(t).find("tbody tr:eq(" + e + ") td:eq(" + i + ")"); 1 == $(n).find(".ui.dropdown").length ? ($(t).closest(".dropdown").addClass("visible"), $(t).closest(".ui.dropdown").find(".menu").removeClass("hidden"), $(t).closest(".ui.dropdown").find(".menu").addClass("visible")) : 1 == $(n).find("select").length ? $(n).find("select").focus() : 1 == $(n).find("input").length ? ($(n).find("input").focus(), $(n).find("input").select()) : 1 == $(n).find("textarea").length && ($(n).find("textarea").focus(), $(n).find("textarea").select()) }, SetActiveIndex: function (t, e) { $(t + " tbody tr").removeClass("active"), e >= 0 && $(t + " tbody tr").eq(e).addClass("active") }, GetActiveIndex: function (t) { return $(t + " tr").index($(t + " tr.active")) }, GetActiveRowData: function (t) { var e = $.mrc_table.columnInfo(t), i = new Array; return $(t + " tbody tr.mrcrow.active").each(function (t) { for (var n = new Object, a = 0; a < e.length; a++)n[e[a].COLUMN_NAME] = $.mrc_table.GetDataInTD($(this).find("td:eq(" + a + ")")); i.push(n) }), i }, GetData: function (t, e, i) { null == e && (e = !1), i = null == i ? "" : i; var n = $.mrc_table.columnInfo(t), a = new Array, s = 0; return $(t + " tbody tr.mrcrow").each(function (t) { var r = new Object; if (1 == e && "MRC_EDIT_MODE" == n[0].COLUMN_NAME) { var l = $(this).find("td:eq(0)").find(".editMode").text(); if (($(this).hasClass("new") || $(this).find("td:eq(0)").hasClass("new")) && (l = "N"), "" == i && "" != l || "" != i && l == i) { for (var d = 0; d < n.length; d++)r[n[d].COLUMN_NAME] = $.mrc_table.GetDataInTD($(this).find("td:eq(" + d + ")")); r.MRC_EDIT_MODE = l, r.ROW_NUM = t, a[s] = r, s++ } } else { for (d = 0; d < n.length; d++)r[n[d].COLUMN_NAME] = $.mrc_table.GetDataInTD($(this).find("td:eq(" + d + ")")); a[s] = r, s++ } }), a }, AddRowHtml: function (t, e, i, n) { i = null == i || i; var a; $(t + " thead tr:last th:eq(0)").attr("column_name"), i ? ($(t + " tbody").append(e), $(t + " tbody tr:last").addClass("mrcrow"), a = $(t + " tbody tr:last")) : ($(t + " tbody").prepend(e), $(t + " tbody tr:first").addClass("mrcrow"), a = $(t + " tbody tr:first")), $(t + ".mrc-table th").each(function (t) { null != $(this).attr("display_size") && ($(this).closest(".mrc-table").find("td:nth-child(" + String(t + 1) + ")").attr("display_size", $(this).attr("display_size")), $(this).closest(".mrc-table").find("td:nth-child(" + String(t + 1) + ")").attr("title", $(this).text())) }); try { var s; $(t + " tbody tr").removeClass("active"), $(a).addClass("active"), (s = null == n ? a.find("td:eq(" + String(0) + ") input") : a.find("td:eq(" + String(n) + ") input")).select(), s.focus(), null == $(t).closest(".table-wrapper") || 0 == $(t).closest(".table-wrapper").length ? $(window).scrollTop($(window).height()) : $(t).closest(".table-wrapper").scrollTop($(t).closest(".table-wrapper")[0].scrollHeight) } catch (t) { } }, AddRowHtmlObject: function (t) { this.AddRowHtml(t.objName, t.trHtml, t.bLast, t.ColfocusIdx), null != t.initObj && this.InitObject(t.initObj) }, getObjects: function (t, e, i) { var n = []; for (var a in t) t.hasOwnProperty(a) && ("object" == typeof t[a] ? n = n.concat(getObjects(t[a], e, i)) : a == e && t[e] == i && n.push(t)); return n }, DeleteRow: function (t, e) { var i = $.mrc_table.subToMainEvent(t); return e(i.selitem, i.trObject) }, GetDataInTD: function (t) { var e = "", i = t; if (1 == i.find(".ui.dropdown").length) { var n = i.find(".ui.dropdown").dropdown("get value"); e = $.isArray(n) ? n.join(",") : n } else if (1 == i.find("input").length) if ("checkbox" == i.find("input").attr("type")) e = null == i.find("input").attr("value") || null == i.find("input").attr("value") || "on" == i.find("input").val() ? i.find("input").is(":checked") : i.find("input").is(":checked") ? i.find("input").val() : null; else if (i.find("input").hasClass("date")) try { var a = i.find("input"); null != (s = i.find("input").attr("id")) && null != s && (a = $("#" + s)), "" != a.val() && null != a.datetimepicker("getValue") && (e = moment(a.datetimepicker("getValue")).format("YYYYMMDD")) } catch (t) { e = "" } else if (i.find("input").hasClass("time")) try { var s; a = i.find("input"); null != (s = i.find("input").attr("id")) && null != s && (a = $("#" + s)), "" != a.val() && null != a.datetimepicker("getValue") && (e = moment(a.datetimepicker("getValue")).format("HH:mm")) } catch (t) { e = "" } else e = i.find("select") ? i.find("input").val() : i.text(); else e = 1 == i.find("select").length ? i.find("select").val() : i.text(); return e }, subToMainEvent: function (t) { try { if (1 == $(t).closest(".mrc_content").length) { if (null != event.type && null != event.type) { var e = $(t).closest("div").parent().find("div").index($(t).closest("div")); $(t).closest(".mrc_content").prev().find(",td[display_size=detail],td[display_size=pc],td[display_size=tablet]").eq(e).find("input,button,select").trigger(event.type) } return null } } catch (t) { } for (var i = $.mrc_table.columnInfo(t.closest("table")), n = new Object, a = 0; a < i.length; a++) { var s = $(t).parent().parent().find("td").eq(a); n[i[a].COLUMN_NAME] = $.mrc_table.GetDataInTD(s) } var r = new Object; return r.selitem = n, r.trObject = $(t).parent().parent(), r }, trTageEventInit: function (t, e) { $(t + ".mrc-table .mrcrow").find("input, select").change(function () { var t = 0; try { if ($(this).attr("value", $(this).val()), "checkbox" == $(this).attr("type") && ($(this).is(":checked") ? $(this).attr("checked", "checked") : $(this).removeAttr("checked")), $(this).closest("tr").next().hasClass("mrc_content")) { t = $(this).closest("td").attr("data-index"); var e = $(this).closest("tr").next().find(".mrc_content_div").eq(t).find("input,select"); if (1 == $(this).closest("td").find(".ui.dropdown").length) try { var i = $(this).closest("td").find(".ui.dropdown").dropdown("get value"); e.closest(".mrc_content_div").find(".ui.dropdown select option").each(function (t) { $.inArray($(this).attr("value"), i) >= 0 ? $(this).attr("selected", "selected") : $(this).removeAttr("selected") }); var n = e.closest(".mrc_content_div").find(".ui.dropdown select, .ui input").outerHTML(); e.closest(".mrc_content_div").html(n), SemanticUI.ComponentInit($(this).closest("tr").next().find(".mrc_content_div").eq(t)) } catch (t) { } else null != e.attr("type") && "checkbox" == e.attr("type") ? $(this).is(":checked") ? (e.attr("checked", "checked"), e.addClass("checked"), e.prop("checked", !0)) : (e.removeAttr("checked"), e.removeClass("checked"), e.prop("checked", !1)) : $(this).hasClass("date") || $(this).hasClass("time") ? "" == $(this).val() ? e.val("") : e.datetimepicker({ value: $(this).datetimepicker("getValue") }) : null == $(this).closest(".ui.dropdown") || null == $(this).closest(".ui.dropdown") || 0 == $(this).closest(".ui.dropdown").length ? e.val($(this).val()) : e.closest(".ui.dropdown").dropdown("set selected", $(this).val()) } "checkbox" == (null == $(this).attr("type") ? "text" : $(this).attr("type")) && $(this).hasClass("chkEditMode") || ($(this).closest("tr").find(".editMode").text("U"), $(this).closest("tr").find(".editMode").closest("td").hasClass("new") || $(this).closest("tr").find(".editMode").closest("td").addClass("update")) } catch (t) { } }) }, ExpandEventInit: function (t, e) { var i = null == e || null == e ? "" : ":eq(" + e + ")"; $(t + ".mrc-table tbody tr.mrcrow" + i + " td i[name=btnExpend]").unbind("click"), $(t + ".mrc-table tbody tr.mrcrow" + i + " td i[name=btnExpend]").click(function () { if ($(this).hasClass("fa-plus-circle") && $(this).closest("tr").next().hasClass("mrc_content") && $(this).closest("tr").next().remove(), $(this).hasClass("fa-plus-circle")) { $(this).removeClass("fa-plus-circle"), $(this).addClass("fa-minus-circle"); var e = $(this).parent().parent(); if (!e.next().hasClass("mrc_content")) { e.after('<tr class="mrc_content" ><td  colspan=' + String($(t + ".mrc-table th").length) + "></td></tr>"); var i = 0; e.find("td[display_size]").each(function (t) { if ($(this).attr("data-index", String(t)), $(this).parent().next().find("td").append("<div class='" + (1 == $(this).hasClass("hidden") || $(this).hasClass("hide") ? "hidden " : "") + "mrc_content_div' data-index=" + String(t) + " display_size='" + $(this).attr("display_size") + "'><span class='title'>" + $(this).attr("title") + "</span><span class='content'>" + $(this).html() + "</span></div>"), 1 != $(this).hasClass("hidden") || 1 != $(this).hasClass("hide")) { var e = $(this).closest("tr.mrcrow").next().find(".title:last").width(); i < e && (i = e) } }), e.next().find("select").each(function (t) { 1 == $(this).closest(".ui.dropdown").length && $(this).closest(".ui.dropdown").dropdown("set selected", $(this).attr("value")) }), 0 == i && (i = 70), e.next().find("td .title").css("min-width", i), $(".mrc_content td span input").parent().css("padding-top", "0em"), e.next().find("input, select").change(function () { var t = $(this).closest(".mrc_content_div").attr("data-index"); try { var e = $(this).closest(".mrc_content").prev().find("td[display_size=detail],td[display_size=pc],td[display_size=tablet]").eq(t).find("input,select"); if ($(this).hasClass("date") || $(this).hasClass("time")) "" == $(this).val() ? e.val("") : e.datetimepicker({ value: $(this).datetimepicker("getValue") }); else if (1 == e.closest("td").find(".ui.dropdown").length) { var i = $(this).closest(".ui.dropdown").dropdown("get value"); e.closest("td").find(".ui.dropdown select option").each(function (t) { $.inArray($(this).attr("value"), i) >= 0 ? $(this).attr("selected", "selected") : $(this).removeAttr("selected") }); var n = e.closest("td").find(".ui.dropdown select").outerHTML(); e.closest("td").html(n) } else null != e.attr("type") && "checkbox" == e.attr("type") ? $(this).is(":checked") ? (e.attr("checked", "checked"), e.addClass("checked"), e.prop("checked", !0)) : (e.removeAttr("checked"), e.removeClass("checked"), e.prop("checked", !1)) : e.val($(this).val()); $(this).closest(".mrc_content").prev().find(".editMode").text("U"), $(this).closest(".mrc_content").prev().find(".editMode").closest("td").addClass("update"), SemanticUI.ComponentInit($(this).closest(".mrc_content").prev().find("td[display_size=detail],td[display_size=pc],td[display_size=tablet]").eq(t)) } catch (t) { } }) } $(this).parent().parent().next().show(); try { SemanticUI.ComponentInit($(this).parent().parent().next()) } catch (t) { } } else $(this).removeClass("fa-minus-circle"), $(this).addClass("fa-plus-circle"), $(this).parent().parent().next().hide() }) }, EditInit: function (t) { $.mrc_table.InitObject({ objName: t, bEdit: !0 }) }, fixedHeder2: function (t, e) { var i = BaseCommon.StringInfo.replaceAll(t, " ", ""); if (BaseCommon.StringInfo.replaceAll(t, "#", ""), i = BaseCommon.StringInfo.replaceAll(t, ".", ""), $(t).parent().hasClass("tablefixedheader")) { var n = $(t).closest(".tablefixedheader"); n.find(".clone-column-table-wrap").remove(), n.find(".clone-head-table-wrap").remove(), $(t).unwrap(i) } var a = null != e.height ? e.height : "100%"; $(t).wrap('<div style="height:' + String(a) + ';overflow-x: hidden;" class="tablefixedheader dv_' + i + '"></div>'), e.options = null == e.options ? { scrollable: !0, callback: function () { $(".clone-column-table-wrap").remove(), $(".dv_" + i).find(".clone-column-head-table-wrap").css("visibility", "hidden!important"), $(".dv_" + i).scroll(function () { $(".dv_" + i).find(".clone-column-head-table-wrap").css("visibility", "visible") }); try { e.callback() } catch (t) { } } } : e.options, $(".dv_" + i).freezeTable(e.options) }, fixedHeder: function (t) { $(t).parent().hasClass("table-wrapper") || ($(t).wrap('<div class="table-wrapper"></div>'), $(t).parent().wrap('<div class="mrc-fixed-table-container"></div>'), $(t).parent().before('<div class="header-bg"></div>')), $(t).find("thead tr").each(function (t) { $(this).find("th").each(function () { if (0 == $(this).find(".th-text").length) { var e = $(this).html(); $(this).html("<div class='th-text'>" + e + "</div>") } $(this).find(".th-text").css("top", String(3 * t) + "em") }) }); try { window.dispatchEvent(new Event("resize")) } catch (t) { } $(window).resize(function () { $.mrc_table.gridHeaderResize(t), $(t).find("thead th").each(function () { $(this).width() <= 0 ? $(this).find(".th-text").width($(this).css("min-width")) : $(this).find(".th-text").width($(this).width()) }) }), $(t).closest(".table-wrapper").get(0).scrollHeight > $(t).closest(".table-wrapper").innerHeight() && ($(t).css("border-bottom", "0px"), $(t + " td:last-child").css("border-right", "1px solid #b2b1b1")), $(".ui.footer").css("top", -45), setTimeout($.mrc_table.gridHeaderResize(t), 200) }, gridHeaderResize: function (t) { null != $(t).closest(".ui.tab") ? $(t).closest(".ui.tab").width() : $(t).width(); $(t).find("thead th").each(function () { $(this).width() <= 0 ? $(this).find(".th-text").width($(this).css("min-width")) : $(this).find(".th-text").width($(this).width()) }) }, gridResize: function (t) { $(window).width() >= 1024 && (null == t && (t = ".mrc-table"), $(t + " tbody tr td [name='btnExpend']").removeClass("fa-minus-circle"), $(t + " tbody tr td [name='btnExpend']").addClass("fa-plus-circle"), $(t + " tbody tr.mrc_content").hide()), 1 == $(t + " tbody tr td [name='btnExpend']").is(":visible") ? $(t + " tbody tr td [name='btnExpend']").parent().css("padding-right", "3em") : $(t + " tbody tr td [name='btnExpend']").parent().removeAttr("padding-right") } }, $.fn.outerHTML = function () { var t = $(this); if (!t[0]) return ""; if (t[0].outerHTML) return t[0].outerHTML; var e = t.wrap("<p/>").parent().html(); return t.unwrap(), e }, $(window).resize(function () { $.mrc_table.gridResize() });