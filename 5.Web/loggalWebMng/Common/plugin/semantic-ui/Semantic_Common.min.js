var SemanticUI = { ComponentInit: function (t) { null == t && (t = "body"), $(t).find("select").dropdown({ onShow: function () { $(".ajax-file-upload form").hide() }, onHide: function () { $(".ajax-file-upload form").show() }, onChange: function (t, e, n) { try { SemanticUI_ComboChange($(this)) } catch (t) { } try { Grid_SemanticUI_ComboChange($(this)) } catch (t) { } "" != t && $(this).closest(".ui.dropdown").removeClass("error") } }), $(t).find("select").each(function () { if ("" == String($(this).find("option:eq(0)").attr("value")).trim()) { var t = $(this).find("option:eq(0)").text(); null != t && "" != t && $(this).parent().find("div.menu").prepend('<div class="item defaultlabel" data-value="">' + t + "</div>") } }), $(t).find(".ui.dropdown").each(function () { null != $(this).find("select").attr("style") && ($(this).attr("style", $(this).find("select").attr("style")), $(".ui.selection.dropdown").css("max-width:100%")) }), $(t).find(".ui.checkbox").checkbox({ onChange: function () { try { $(this).parent().hasClass("checked") ? $(this).attr("checked", !0) : $(this).removeAttr("checked") } catch (t) { } } }), $(t).find("input:checkbox").removeClass("ui"), $(t).find("input:checkbox").removeClass("checkbox"), $(t).find("input:checkbox").addClass("ui"), $(t).find("input:checkbox").addClass("checkbox"), $(t).find("input:checkbox").checkbox(), $(t).find(".right.menu.open").on("click", function (e) { e.preventDefault(), $(t).find(".ui.vertical.menu").toggle() }); try { $(t).find("input.date").datetimepicker({ timepicker: !1, format: "Y.m.d" }) } catch (t) { } try { $(t).find("input.time").datetimepicker({ datepicker: !1, step: 30, format: "G:i", minDate: null, maxDate: null, onChangeDateTime: function (t, e) { "" != e.val() && e.parent().removeClass("error") } }) } catch (t) { } try { $(t).find("input.datetime").datetimepicker({ datepicker: !0, step: 30, format: "G:i", minDate: null, maxDate: null, onChangeDateTime: function (t, e) { "" != e.val() && e.parent().removeClass("error") } }) } catch (t) { } 2 == $(".ui .content.frtodate input").length && DatetimePicker.frtoInit("#" + $(".ui .content.frtodate input:eq(0)").attr("id"), "#" + $(".ui .content.frtodate input:eq(1)").attr("id")); try { $(".ui.accordion").accordion({ duration: 500, onClosing: function () { $(this).find(".field *").addClass("hidden") }, onOpening: function () { $(this).find(".field *").removeClass("hidden") }, onOpen: function () { try { $("window").width() >= 768 ? $(this).css("height", $(this).find(".ui.segment.field").height() + Number($(".ui.footer.segment").css("bottom").replace("px", ""))) : $(this).css("height", $(this).find(".ui.segment.field").height() + 30) } catch (t) { } try { accordionOpenCallback($(this)) } catch (t) { } }, onClose: function () { $(".cd-main-header").slideDown("slow", function () { }) } }) } catch (t) { } }, ComboBox: { AddItem: function (t, e, n, i) { if (e = e.trim(), n = n.trim(), $(t).append('<option value="' + e + '" selected>' + n + "</option>"), null != $(t).attr("multiple")) { var a = SemanticUI.ComboBox.GetAllValues(t); a.push(e), setTimeout(function () { $(t).dropdown("set selected", a) }, 220) } else null == i && (i = !1), setTimeout(function () { $(t).dropdown("set selected", e) }, 220); $(t).dropdown("refresh") }, GetObject: function (t) { return SemanticUI.ComboBox.GetVal(), $("id").parent() }, SetVal: function (t, e) { try { $(t).dropdown("set selected", String(e)) } catch (t) { } }, GetVal: function (t) { return String(t).indexOf("#") < 0 && (t = "#" + t), $(t).dropdown("get value") }, IsVal: function (t, e) { return String(t).indexOf("#") < 0 && (t = "#" + t), $.inArray(e, $(t).dropdown("get value")) >= 0 }, GetText: function (t) { return String(t).indexOf("#") < 0 && (t = "#" + t), $(t).dropdown("get text") }, GetCompStoreVal: function (t) { String(t).indexOf("#") < 0 && (t = "#" + t); var e = $(t).dropdown("get value"), n = new Object; return n.COMPANY_CODE = "", n.STORE_CODE = "", null != e && "" != e && (n.COMPANY_CODE = String(e).split("|")[0], n.STORE_CODE = String(e).split("|")[1]), n }, GetValues: function (t) { String(t).indexOf("#") < 0 && (t = "#" + t); var e = $(t).dropdown("get value"); return null == e ? new Array : e }, GetTexts: function (t) { String(t).indexOf("#") < 0 && (t = "#" + t); var e = $(t).dropdown("get text"); return null == e ? new Array : e }, GetValuesToString: function (t, e) { var n = ""; try { String(t).indexOf("#") < 0 && (t = "#" + t), null == e && (e = ","); var i = $(t).dropdown("get value"); if (null == i) return ""; for (var a = 0; a < i.length; a++)a > 0 && (n += e), n += i[a].trim() } catch (t) { return "" } return n }, GetSelectedArray: function (t, e, n, i) { null == e && (e = "value"), null == n && (n = "text"); var a = new Array; return $(t).parent().find(".ui.label").each(function () { var t = new Object; t[e] = $(this).attr("data-value"), t[n] = $(this).text(), null != i && $.each(i, function (e, n) { t[e] = n }), a.push(t) }), a }, GetAllData: function (t, e, n, i) { null == e && (e = "value"), null == n && (n = "text"); var a = new Array; return $(t).parent().find(".menu div.item").each(function () { var t = new Object; t[e] = $(this).attr("data-value"), t[n] = $(this).text(), null != i && $.each(i, function (e, n) { t[e] = n }), a.push(t) }), a }, GetAllValues: function (t) { var e = new Array; return $(t).parent().find(".menu div.item").each(function () { e.push($(this).attr("data-value")) }), e }, SetWidth: function (t, e) { $(t).parent().css("width", e) }, Disable: function (t, e) { e ? $(t).closest(".ui.dropdown").addClass("disabled") : $(t).closest(".ui.dropdown").removeClass("disabled") } }, CheckBox: { GetVal: function (t) { return $(t).parent().hasClass("checked") ? $(t).val() : "1" == $(t).val() ? "0" : null }, SetVal: function (t, e) { t = t.replace("#", ""), $("input:checkbox[id='" + t + "']").prop("checked", e); try { setTimeout("try{dv_" + t + "_Click('" + val + "');}catch(e){}", 10) } catch (t) { } } }, YesOrNo: { GetVal: function (t) { return $(t).val() }, SetVal: function (t, e, n) { name = String(t).replace("#", "").replace(".", ""); try { n = null == n || n, window["dv_" + name + "_Click"](e, n) } catch (t) { } } }, Form: { Invalidation: { ErrorFocus: function () { try { var t = $(".field.error input,.field.error select,.field.error checkbox,.field.error radio").eq(0); $(t).focus(), $(t).select() } catch (t) { } } }, addErrorMessage: function (t, e, n) { $(e).html(""), null == e && (0 == $(".ui.error.message ul.list").length && $(".ui.error.message").html("<ul class='list'></ul>"), e = ".ui.error.message"), $(n).closest(".ui.field,.ui.dropdown").addClass("error"); for (var i = 0; i < t.length; i++)String($(e).text()).indexOf(t[i]) < 0 && $(e + " ul.list").append("<li>" + t[i] + "</li>"); $(e + " li").length > 0 ? $(e).show() : $(e).hide() }, Clear: function () { $(".ui.form").form("clear") } }, ErrorBoxHide: function () { $(".ui.error.message").hide(), $(".ui.error.message").html("") }, Popup: { ContentResize: function (t, e) { try { null == e && (e = 50); var n = $(t).height() - $(t + " .header").height() - $(t + " .actions").height(); 1 == $(".ui.form.popSearch").length && (n -= $(".ui.form.popSearch").height()), $(window).width() < 768 ? ($(t + " .content").height(n), $(t).css("margin-left", -1 * $(t).width() / 2)) : $(t + " .content").height(n - e); try { $(document).scrollTop() } catch (t) { } $(t).css("margin-top", -1 * ($(t).height() / 2 + 40)), window.dispatchEvent(new Event("resize")) } catch (t) { } }, Show: function (t) { $(t).modal({ detachable: !1 }).modal("show"), setTimeout(SemanticUI.Popup.ContentResize(t), 1e3) } }, Tab: { GetActiveTab: function (t) { return $(t).find(".item.active").attr("data-tab") }, SetActiveTab: function (t, e) { SemanticUI.Tab.isShow(t, e, !0) }, isShow: function (t, e, n) { $(t + ".ui.menu .item").removeClass("active"), $(t).parent().find(".ui.tab.segment").removeClass("active"), 1 == n && ($(t + " .item[data-tab='" + e + "']").addClass("active"), $(t).parent().find(".ui.tab.segment[data-tab='" + e + "']").addClass("active")) } }, Modal: { CenterShow: function (t) { $(t).css("margin-top", -Number($(t).height()) / 2) } }, Button: { GetBooleanVal: function (t) { return "1" == $(t).val() || "ture" == String($(t).val()).toLocaleLowerCase() } } }; $(document).ready(function () { SemanticUI.ComponentInit() });