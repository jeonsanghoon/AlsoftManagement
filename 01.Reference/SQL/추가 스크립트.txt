begin tran
IF OBJECT_ID('T_SEARCH_KEYWORD') IS NOT NULL
BEGIN
	DROP TABLE T_SEARCH_KEYWORD
END
IF OBJECT_ID('T_CATEGORY_KEYWORD') IS NOT NULL
BEGIN
	DROP TABLE T_CATEGORY_KEYWORD
END

IF OBJECT_ID('T_CATEGORY') IS NOT NULL
BEGIN
	DROP TABLE T_CATEGORY
END



CREATE TABLE T_CATEGORY
(
	CATEGORY_CODE         INT               NOT NULL
   ,CATEGORY_TYPE         INT               NOT NULL
   ,PARENT_CATEGORY_CODE  INT               NOT NULL
   ,LEVEL_DEPTH           INT               NOT NULL
   ,SEARCH_CAGEGORY_CODE  VARCHAR(100)      NOT NULL
   ,CATEGORY_NAME         NVARCHAR(200)     NOT NULL
   ,CATEGORY_DISPlAY_NAME NVARCHAR(200)     NOT NULL
   ,ORDER_SEQ             INT               NOT NULL
   ,HIDE                  BIT               NOT NULL
   ,REMARK                NVARCHAR(200)	    
   ,INSERT_CODE           INT               NOT NULL
   ,INSERT_DATE           DATETIME          NOT NULL
   ,UPDATE_CODE           INT               NOT NULL
   ,UPDATE_DATE           DATETIME          NOT NULL
)
GO
IF OBJECT_ID('pk_T_CATEGORY') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY
    ADD CONSTRAINT pk_T_CATEGORY PRIMARY KEY (CATEGORY_CODE)
END

IF OBJECT_ID('FK_T_CATEGORY_INSERT_CODE') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY  
	ADD CONSTRAINT FK_T_CATEGORY_INSERT_CODE FOREIGN KEY (INSERT_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END

IF OBJECT_ID('FK_T_CATEGORYE_UPDATE_CODE') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY  
	ADD CONSTRAINT FK_T_CATEGORY_UPDATE_CODE FOREIGN KEY (UPDATE_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END
CREATE INDEX IX_T_CATEGORY_SEARCH ON T_CATEGORY(SEARCH_CAGEGORY_CODE)
GO


EXEC SP_ADD_COMMENT 'T_CATEGORY', N'분류코드'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'단말기번호(일련번호), MAX + 1로생성함, 기본키','CATEGORY_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'카테고리유형 T_COMMON 테이블의 B004 코드 사용, 1:광고 2:지역','CATEGORY_TYPE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'상위카테고리코드','PARENT_CATEGORY_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'레벨깊이','LEVEL_DEPTH'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'검색을 위한 키조함  최상위코드부터 하위 코드 순으로 4자리씩 |로구분 예) 0001|0012|0100','SEARCH_CAGEGORY_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'카테고리명','CATEGORY_NAME'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'카테고리 표시명','CATEGORY_DISPlAY_NAME'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'정렬순서','ORDER_SEQ'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'숨김(0:보이기, 1:숨김) T_COMMON : MAIN_CODE=>B003','HIDE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'비고','REMARK'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'등록자','INSERT_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'등록일','INSERT_DATE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'수정자','UPDATE_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY', N'수정일','UPDATE_DATE'

IF OBJECT_ID('T_KEYWORD') IS NOT NULL
BEGIN
	DROP TABLE T_KEYWORD
END

CREATE TABLE T_KEYWORD
(
	KEYWORD_CODE  INT  NOT NULL
   ,IS_SYNONYM  BIT
   ,KEYWORD_NAME  NVARCHAR(200) NOT NULL
   ,REMARK        NVARCHAR(200) 
   ,HIDE          BIT       NOT NULL
   ,INSERT_CODE   INT       NOT NULL
   ,INSERT_DATE   DATETIME  NOT NULL
   ,UPDATE_CODE   INT       NOT NULL
   ,UPDATE_DATE   DATETIME  NOT NULL
)
GO

IF OBJECT_ID('pk_T_KEYWORD') IS NULL
BEGIN
	ALTER TABLE T_KEYWORD
    ADD CONSTRAINT pk_T_KEYWORD PRIMARY KEY (KEYWORD_CODE, IS_SYNONYM)
END

IF OBJECT_ID('FK_T_KEYWORD_INSERT_CODE') IS NULL
BEGIN
	ALTER TABLE T_KEYWORD  
	ADD CONSTRAINT FK_T_KEYWORD_INSERT_CODE FOREIGN KEY (INSERT_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END

IF OBJECT_ID('FK_T_KEYWORD_UPDATE_CODE') IS NULL
BEGIN
	ALTER TABLE T_KEYWORD  
	ADD CONSTRAINT FK_T_KEYWORD_UPDATE_CODE FOREIGN KEY (UPDATE_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END
GO

EXEC SP_ADD_COMMENT 'T_KEYWORD', N'키워드 테이블'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'키워드코드','KEYWORD_CODE'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'동의어 여부(0:기본어, 1:동의어) T_COMMON : B003','IS_SYNONYM'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'키워드명',  'KEYWORD_NAME'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'비고',      'REMARK'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'숨김여부(0:보이기, 1:숨김) T_COMMON : MAIN_CODE=>B003','HIDE'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'등록자',    'INSERT_CODE'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'등록일',    'INSERT_DATE'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'수정자',    'UPDATE_CODE'
EXEC SP_ADD_COMMENT 'T_KEYWORD', N'수정일',    'UPDATE_DATE'

CREATE TABLE T_CATEGORY_KEYWORD
(
    CK_CODE INT    IDENTITY(1,1) NOT NULL
   ,CATEGORY_CODE INT           NOT NULL
   ,KEYWORD_CODE   INT           NOT NULL
   ,KEYWORD_NAME   NVARCHAR(200) NOT NULL
   ,REF_DATA1      NVARCHAR(200) 
   ,REF_DATA2      NVARCHAR(200)
   ,REMARK         NVARCHAR(200)
   
   ,HIDE           BIT           NOT NULL
   ,INSERT_CODE    INT           NOT NULL
   ,INSERT_DATE    DATETIME      NOT NULL
   ,UPDATE_CODE    INT           NOT NULL
   ,UPDATE_DATE    DATETIME      NOT NULL
)


IF OBJECT_ID('pk_T_CATEGORY_KEYWORD') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY_KEYWORD
    ADD CONSTRAINT pk_T_CATEGORY_KEYWORD PRIMARY KEY (CK_CODE)
END

IF OBJECT_ID('FK_T_CATEGORY_KEYWORD_INSERT_CODE') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY_KEYWORD  
	ADD CONSTRAINT FK_T_CATEGORY_KEYWORD_INSERT_CODE FOREIGN KEY (INSERT_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END

IF OBJECT_ID('FK_T_CATEGORY_KEYWORD_UPDATE_CODE') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY_KEYWORD  
	ADD CONSTRAINT FK_T_CATEGORY_KEYWORD_UPDATE_CODE FOREIGN KEY (UPDATE_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END
GO

IF OBJECT_ID('FK_T_CATEGORY_KEYWORD_CC') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY_KEYWORD  
	ADD CONSTRAINT FK_T_CATEGORY_KEYWORD_CC FOREIGN KEY (CATEGORY_CODE)  
	REFERENCES T_CATEGORY(CATEGORY_CODE)
END

IF OBJECT_ID('FK_T_CATEGORY_KEYWORD_KC') IS NULL
BEGIN
	ALTER TABLE T_CATEGORY_KEYWORD  
	ADD CONSTRAINT FK_T_CATEGORY_KEYWORD_KC FOREIGN KEY (KEYWORD_CODE)  
	REFERENCES T_KEYWORD(KEYWORD_CODE)
END
GO


EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'카테고리와 키워드 연결 테이블'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'일련번호(기본키)','CK_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'카테고리코드 T_CATEGORY 테이블과 Relation','CATEGORY_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'키워드코드 T_KEYWORD 테이블과 Relation','KEYWORD_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'키워드명','KEYWORD_NAME'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'T_CATEGORYE테이블에 CATEGORY_TYPE가 2일 경우 위도(Latitude)로 사용','REF_DATA1'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'T_CATEGORYE테이블에 CATEGORY_TYPE가 2일 경우 경도(Longitude)로 사용','REF_DATA2'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'비고','REMARK'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'숨김여부(0:보이기, 1:숨김) T_COMMON : MAIN_CODE=>B003','HIDE'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'등록자','INSERT_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'등록일','INSERT_DATE'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'수정자','UPDATE_CODE'
EXEC SP_ADD_COMMENT 'T_CATEGORY_KEYWORD', N'수정일','UPDATE_DATE'




----SELECT * FROM T_STORE
IF OBJECT_ID('T_DEVICE') IS NOT  NULL
BEGIN
	DROP TABLE T_DEVICE
END
IF OBJECT_ID('T_DEVICE') IS NULL
BEGIN
	CREATE TABLE T_DEVICE
	(
		DEVICE_CODE   BIGINT        IDENTITY(1,1) 
	   ,STORE_CODE    INT            
	   ,DEVICE_NUMBER VARCHAR(100)   NOT NULL
	   ,DEVICE_NAME   NVARCHAR(200)  NOT NULL
	   ,DEVICE_DESC   NVARCHAR(400)  NOT NULL
	   ,BUSI_TYPE     INT            NOT NULL
	   ,BUSI_TYPE2    INT            NOT NULL
	   ,CATEGORY_CODE INT            NOT NULL
	   ,ADDRESS1      NVARCHAR(200)  NOT NULL  
	   ,ADDRESS2      NVARCHAR(200)  NOT NULL
	   ,ZIP_CODE      VARCHAR(10)    NOT NULL
       ,LATITUDE      NUMERIC(20,16) NOT NULL
	   ,LONGITUDE    NUMERIC(20,16) NOT NULL
	   ,REMARK        NVARCHAR(200)
	   ,TIME_ZONE     INT            NOT NULL
	   ,INSERT_CODE	  INT            NOT NULL
	   ,INSERT_DATE   DATETIME       NOT NULL 
	   ,UPDATE_CODE	  INT            NOT NULL
	   ,UPDATE_DATE	  DATETIME       NOT NULL
	)
END
GO



IF OBJECT_ID('pk_T_DEVICE') IS NULL
BEGIN
	ALTER TABLE T_DEVICE
    ADD CONSTRAINT pk_T_DEVICE PRIMARY KEY (DEVICE_CODE)
END
IF OBJECT_ID('FK_T_DEVICE_STORE_CODE') IS NULL
BEGIN
	ALTER TABLE T_DEVICE  
	ADD CONSTRAINT FK_T_DEVICE_INSERT_CODE FOREIGN KEY (STORE_CODE)  
	REFERENCES T_STORE(STORE_CODE)
END

--IF OBJECT_ID('FK_T_DEVICE_CK_CODE') IS NULL
--BEGIN
--	ALTER TABLE T_DEVICE  
--	ADD CONSTRAINT FK_T_DEVICE_CK_CODE FOREIGN KEY (CK_CODE)  
--	REFERENCES T_CATEGORY_KEYWORD(CK_CODE)
--END


EXEC [dbo].[SP_ADD_Default] 'T_DEVICE', 'TIME_ZONE',  '9'


IF OBJECT_ID('FK_T_DEVICE_INSERT_CODE') IS NULL
BEGIN
	ALTER TABLE T_DEVICE  
	ADD CONSTRAINT FK_T_DEVICE_INSERT_CODE FOREIGN KEY (INSERT_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END

IF OBJECT_ID('FK_T_DEVICE_UPDATE_CODE') IS NULL
BEGIN
	ALTER TABLE T_DEVICE  
	ADD CONSTRAINT FK_T_DEVICE_UPDATE_CODE FOREIGN KEY (UPDATE_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END
GO

EXEC SP_ADD_COMMENT 'T_DEVICE', N'로컬단말기기정보'


EXEC SP_ADD_COMMENT 'T_DEVICE', N'단말기번호(일련번호), 기본키','DEVICE_CODE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'매장코드 T_STORE 테이블 참조, NULL일경우 매장에 종속 된것이 아님','STORE_CODE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'장비번호(MAC_ADDRESS)','DEVICE_NUMBER'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'장비명','DEVICE_NAME'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'장비설명','DEVICE_DESC'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'영리여부(0:영리, 1:비영리) T_COMMON의 MAIN_CODE : B001','BUSI_TYPE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'사업자여부(0:일반, 1:사업자) T_COMMON의 MAIN_CODE : B002','BUSI_TYPE2'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'주소','ADDRESS1'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'상세주소','ADDRESS2'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'우편번호','ZIP_CODE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'위도','LATITUDE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'경도','LONGITUDE '
EXEC SP_ADD_COMMENT 'T_DEVICE', N'비고','REMARK'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'등록자','INSERT_CODE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'등록일','INSERT_DATE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'수정자','UPDATE_CODE'
EXEC SP_ADD_COMMENT 'T_DEVICE', N'수정일','UPDATE_DATE'


IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B001' AND SUB_CODE = -1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B001' MAIN_CODE, -1 SUB_CODE, N'영리여부' NAME, NULL LANGUAGE_CODE, -1 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 1 HIDE, 0, GETDATE(), 0, GETDATE()
END
IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B001' AND SUB_CODE = 0)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B001' MAIN_CODE, 0 SUB_CODE, N'비영리' NAME, NULL LANGUAGE_CODE, 0 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END
IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B001' AND SUB_CODE = 1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B001' MAIN_CODE, 1 SUB_CODE, N'영리' NAME, NULL LANGUAGE_CODE, 1 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END



IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B002' AND SUB_CODE = -1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B002' MAIN_CODE, -1 SUB_CODE, N'사업자여부' NAME, NULL LANGUAGE_CODE, -1 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 1 HIDE, 0, GETDATE(), 0, GETDATE()
END
IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B002' AND SUB_CODE = 0)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B002' MAIN_CODE, 0 SUB_CODE, N'일반' NAME, NULL LANGUAGE_CODE, 0 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END
IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B002' AND SUB_CODE = 1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B002' MAIN_CODE, 1 SUB_CODE, N'사업자' NAME, NULL LANGUAGE_CODE, 1 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END


IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B003' AND SUB_CODE = -1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B003' MAIN_CODE, -1 SUB_CODE, N'예/아니오' NAME, NULL LANGUAGE_CODE, -1 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END

IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B003' AND SUB_CODE = 0)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B003' MAIN_CODE, 0 SUB_CODE, N'아니오' NAME, NULL LANGUAGE_CODE, 1 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END

IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B003' AND SUB_CODE = 1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B003' MAIN_CODE, 1 SUB_CODE, N'예' NAME, NULL LANGUAGE_CODE, 0 ORDER_SEQ, NULL REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END


IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B004' AND SUB_CODE = -1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B004' MAIN_CODE, -1 SUB_CODE, N'서치유형' NAME, NULL LANGUAGE_CODE, -1 ORDER_SEQ, N'T_CATEGORY 테이블의 CATEGORY_TYPE로 사용, T_SEARCH_KEYWORD테이블 SEARCH_TYPE사용' REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END


IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B004' AND SUB_CODE = 1)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B004' MAIN_CODE, 1 SUB_CODE, N'광고' NAME, NULL LANGUAGE_CODE, 1 ORDER_SEQ, N'T_AD 테이블의 AD_CODE와 T_SEARCH_KEYWORD테이블의 SEARCH_TYPE이 1일경우 SEARCH_CODE Join' REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END

IF NOT EXISTS (SELECT * FROM T_COMMON WHERE MAIN_CODE = 'B004' AND SUB_CODE = 2)
BEGIN
	INSERT INTO T_COMMON
	( MAIN_CODE, SUB_CODE, NAME, LANGUAGE_CODE, ORDER_SEQ, REF_DATA1, REF_DATA2, REF_DATA3, REF_DATA4, HIDE,INSERT_CODE,INSERT_DATE,UPDATE_CODE,UPDATE_DATE
	)
	SELECT 'B004' MAIN_CODE, 2 SUB_CODE, N'지역' NAME, NULL LANGUAGE_CODE, 2 ORDER_SEQ, N'T_DEVICE 테이블의 DEVICE_CODE와 T_SEARCH_KEYWORD테이블의 SEARCH_TYPE이 2일경우 SEARCH_CODE Join' REF_DATA1, NULL REF_DATA2, NULL REF_DATA3, NULL REF_DATA4, 0 HIDE, 0, GETDATE(), 0, GETDATE()
	
END




IF OBJECT_ID('T_AD') IS NOT  NULL
BEGIN
	DROP TABLE T_AD
END

CREATE TABLE T_AD
(
   AD_CODE            BIGINT        IDENTITY(1,1) NOT NULL
  ,CATEGORY_CODE      INT           NOT NULL
  ,LOGO_URL           NVARCHAR(200) NOT NULL
  ,TITLE              NVARCHAR(200) NOT NULL
  ,CONTENT            NVARCHAR(MAX) NOT NULL
  ,FR_DATE            VARCHAR(8)    NOT NULL
  ,TO_DATE            VARCHAR(8)    NOT NULL
  ,FR_TIME            VARCHAR(5)    NOT NULL
  ,TO_TIME            VARCHAR(5)    NOT NULL
  ,CLICK_CNT           INT          NOT NULL
  ,COMPANY_CODE INT         NOT NULL
  ,STORE_CODE VARCHAR(400) NOT NULL
  ,MEMBER_CODE  INT           NOT NULL
  ,TIME_ZONE          INT           NOT NULL
  ,REMARK             NVARCHAR(200)

  ,HIDE               BIT           NOT NULL
  ,INSERT_CODE        INT           NOT NULL
  ,INSERT_DATE        DATETIME      NOT NULL
  ,UPDATE_CODE        INT           NOT NULL
  ,UPDATE_DATE        DATETIME      NOT NULL
)

IF OBJECT_ID('pk_T_AD') IS NULL
BEGIN
	ALTER TABLE T_AD
    ADD CONSTRAINT pk_T_AD PRIMARY KEY (AD_CODE)
END
IF OBJECT_ID('FK_T_AD_INSERT_CODE') IS NULL
BEGIN
	ALTER TABLE T_AD 
	ADD CONSTRAINT FK_T_AD_INSERT_CODE FOREIGN KEY (INSERT_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END


--IF OBJECT_ID('FK_T_AD_CK_CODE') IS NULL
--BEGIN
--	ALTER TABLE T_AD  
--	ADD CONSTRAINT FK_T_AD_CK_CODE FOREIGN KEY (CK_CODE)  
--	REFERENCES T_CATEGORY_KEYWORD(CK_CODE)
--END

IF OBJECT_ID('FK_T_AD_UPDATE_CODE') IS NULL
BEGIN
	ALTER TABLE T_AD  
	ADD CONSTRAINT FK_T_AD_UPDATE_CODE FOREIGN KEY (UPDATE_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END
GO
IF OBJECT_ID('T_AD_DEVICE') IS NOT NULL
BEGIN
	DROP TABLE T_AD_DEVICE
END

EXEC SP_ADD_COMMENT 'T_AD', N'광고테이블'
EXEC SP_ADD_COMMENT 'T_AD', N'일련번호(기본키)',     'AD_CODE'
EXEC SP_ADD_COMMENT 'T_AD', N'광고분류코드 T_CATEGORY테이블에 CATEGORY_TYPE가 1인 데이터', 'CATEGORY_CODE'
EXEC SP_ADD_COMMENT 'T_AD', N'로고 URL',             'LOGO_URL'
EXEC SP_ADD_COMMENT 'T_AD', N'제목',                 'TITLE'
EXEC SP_ADD_COMMENT 'T_AD', N'내용',                 'CONTENT'
EXEC SP_ADD_COMMENT 'T_AD', N'광고시작일(yyyyMMdd)', 'FR_DATE'
EXEC SP_ADD_COMMENT 'T_AD', N'광고종료일(yyyyMMdd)', 'TO_DATE'
EXEC SP_ADD_COMMENT 'T_AD', N'광고시작시간(HH:mm)',  'FR_TIME'
EXEC SP_ADD_COMMENT 'T_AD', N'광고시작시간(HH:mm)',  'TO_TIME'
EXEC SP_ADD_COMMENT 'T_AD', N'광고클릭수',           'CLICK_CNT'
EXEC SP_ADD_COMMENT 'T_AD', N'T_COMPANY 테이블의 COMPANY_CODE',           'COMPANY_CODE'
EXEC SP_ADD_COMMENT 'T_AD', N'요청한매장코드들 T_SOTRE 테이블의 STORE_CODE , 구분자 => | 값이 없으면 업체 전체 광고',     'STORE_CODE'
EXEC SP_ADD_COMMENT 'T_AD', N'요청한사용자코드 T_MEMBER 테이블의 MEMBER_CODE',       'MEMBER_CODE'
EXEC SP_ADD_COMMENT 'T_AD', N'시간대역 UTC기준 GMT시간',     'TIME_ZONE'
EXEC SP_ADD_COMMENT 'T_AD', N'숨김여부(1:숨김)',     'HIDE'
EXEC SP_ADD_COMMENT 'T_AD', N'비고',                 'REMARK'
EXEC SP_ADD_COMMENT 'T_AD', N'등록자',               'INSERT_CODE'
EXEC SP_ADD_COMMENT 'T_AD', N'등록일',               'INSERT_DATE'
EXEC SP_ADD_COMMENT 'T_AD', N'광고테이블',           'UPDATE_CODE'
EXEC SP_ADD_COMMENT 'T_AD', N'광고테이블',           'UPDATE_DATE'



CREATE TABLE T_AD_DEVICE
(
    AD_DEVICE_CODE BIGINT IDENTITY(1,1)
   ,AD_CODE        BIGINT
   ,DEVICE_CODE    BIGINT
   ,FR_DATE      VARCHAR(8)
   ,TO_DATE      VARCHAR(8)
   ,FR_TIME      VARCHAR(5)
   ,TO_TIME      VARCHAR(5)
   ,CLICK_CNT    INT
   ,REMARK       NVARCHAR(200)
   ,INSERT_CODE  INT
   ,INSERT_DATE  DATETIME
   ,UPDATE_CODE  INT
   ,UPDATE_DATE  DATETIME
)

IF OBJECT_ID('pk_T_AD_DEVICE') IS NULL
BEGIN
	ALTER TABLE T_AD_DEVICE
    ADD CONSTRAINT pk_T_AD_DEVICE PRIMARY KEY (AD_DEVICE_CODE)
END

IF OBJECT_ID('uc_T_AD_DEVICE') IS NULL
BEGIN
	ALTER TABLE T_AD_DEVICE
    ADD CONSTRAINT uc_T_AD_DEVICE UNIQUE (AD_CODE,DEVICE_CODE)
END 

IF OBJECT_ID('FK_T_AD_DEVICE_INSERT_CODE') IS NULL
BEGIN
	ALTER TABLE T_AD_DEVICE 
	ADD CONSTRAINT FK_T_AD_DEVICE_INSERT_CODE FOREIGN KEY (INSERT_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END

IF OBJECT_ID('FK_T_AD_DEVICE_UPDATE_CODE') IS NULL
BEGIN
	ALTER TABLE T_AD  
	ADD CONSTRAINT FK_T_AD_DEVICE_UPDATE_CODE FOREIGN KEY (UPDATE_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END
GO

EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'광고&단말기테이블'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'일련번호(기본키)','AD_DEVICE_CODE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'광고코드','AD_CODE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'장비코드(T_DEVICE테이블)','DEVICE_CODE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'광고시작일(yyyyMMdd)', 'FR_DATE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'광고종료일(yyyyMMdd)', 'TO_DATE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'광고시작시간(HH:mm) 시작시간과 종료시간이 모두 00:00일경우 All Day', 'FR_TIME'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'광고종료시간(HH:mm) 시작시간과 종료시간이 모두 00:00일경우 All Day', 'TO_TIME'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'단말기별광고클릭수', 'CLICK_CNT'
				
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'비고',   'REMARK'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'등록자', 'INSERT_CODE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'등록일', 'INSERT_DATE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'수정자', 'UPDATE_CODE'
EXEC SP_ADD_COMMENT 'T_AD_DEVICE', N'수정일', 'UPDATE_DATE'



CREATE TABLE T_SEARCH_KEYWORD
(
	SEARCH_TYPE    BIGINT     NOT NULL
   ,SEARCH_CODE    BIGINT     NOT NULL
   ,CK_CODE        INT        NOT NULL
   ,REMARK         NVARCHAR(200) 
   ,INSERT_CODE    INT           NOT NULL
   ,INSERT_DATE    DATETIME      NOT NULL
   ,UPDATE_CODE    INT           NOT NULL
   ,UPDATE_DATE    DATETIME      NOT NULL
)


IF OBJECT_ID('pk_T_SEARCH_KEYWORD') IS NULL
BEGIN
	ALTER TABLE T_SEARCH_KEYWORD
    ADD CONSTRAINT pk_T_SEARCH_KEYWORD PRIMARY KEY (SEARCH_TYPE, SEARCH_CODE, CK_CODE)
END

IF OBJECT_ID('FK_T_CATEGORY_KEYWORD_CK_CODE') IS NULL
BEGIN
	ALTER TABLE T_SEARCH_KEYWORD 
	ADD CONSTRAINT FK_T_SEARCH_KEYWORD_INSERT_CODE FOREIGN KEY (CK_CODE)  
	REFERENCES T_CATEGORY_KEYWORD(CK_CODE)
END

IF OBJECT_ID('FK_T_SEARCH_KEYWORD_INSERT_CODE') IS NULL
BEGIN
	ALTER TABLE T_SEARCH_KEYWORD 
	ADD CONSTRAINT FK_T_SEARCH_KEYWORD_INSERT_CODE FOREIGN KEY (INSERT_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END

IF OBJECT_ID('FK_T_SEARCH_KEYWORD_UPDATE_CODE') IS NULL
BEGIN
	ALTER TABLE T_AD  
	ADD CONSTRAINT FK_T_SEARCH_KEYWORD_UPDATE_CODE FOREIGN KEY (UPDATE_CODE)  
	REFERENCES T_MEMBER(MEMBER_CODE)
END


EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'자료검색키워드 테이블'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'검색구분 T_COMMON테이블의 MAIN_CODE : M0004 참조','SEARCH_TYPE'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'SEARCH_TYPE가 1인경우 T_AD테이블과 조인, 2일경우 T_DEVICE테이블과조인, T_COMMON테이블의 MAIN_CODE : M0004','SEARCH_CODE'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'T_CATEGORY_KEYWORD테이블의 CK_CODE','CK_CODE'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'비고','REMARK'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'등록자 T_MEMBER테이블의 MEMBER_CODE','INSERT_CODE'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'등록일자','INSERT_DATE'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'수정자 T_MEMBER테이블의 MEMBER_CODE','UPDATE_CODE'
EXEC SP_ADD_COMMENT 'T_SEARCH_KEYWORD', N'수정일자','UPDATE_DATE'


commit tran

exec [dbo].[SP_TableDescHtml]


INSERT INTO T_DEVICE
(STORE_CODE, DEVICE_NUMBER, DEVICE_NAME, DEVICE_DESC, BUSI_TYPE, BUSI_TYPE2
, ADDRESS1, ADDRESS2, ZIP_CODE, LATITUDE, LONGITUDE, REMARK, TIME_ZONE, INSERT_CODE, INSERT_DATE, UPDATE_CODE, UPDATE_DATE)
SELECT NULL, 'M324-234-3MD3d', N'강남구청1번단말기', '', 0,1, N'서울 강남구', N'학동로 426(삼성동, 강남구청)', '06090', 37.5172985,127.0473794, '', 9, 0, getdate(),0,getdate()
UNION ALL

SELECT NULL, 'K324-234-3MD3d', N'알트소프트단말기', '', 0,1, N'서울 강남구', N'봉은사로55길 20', '06097', 37.5118635,127.0443668, '', 9, 0, getdate(),0,getdate()